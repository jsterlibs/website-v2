[{"title":"Klass","url":"/library/klass","id":"klass","library":{"id":"klass","description":"An expressive, cross platform JavaScript Class provider with a classical interface to prototypal inheritance.","logo":"/images/repo.png","name":"Klass","links":{"site":"http://dustindiaz.com/klass","github":"https://github.com/ded/klass"},"tags":[]}},{"title":"JS.Class","url":"/library/js-class","id":"js-class","library":{"id":"js-class","description":"JS.Class is a portable, modular JavaScript class library, influenced by the Ruby programming language. It provides a rich set of tools for building object-oriented JavaScript programs, and is designed to run on a wide variety of client- and server-side platforms.\n\nIn particular, to support the writing of equally portable JavaScript code, it provides a package manager and testing framework that run on all supported platforms.","logo":"http://451f.com.ua/img/2008/07/js-class-ruby-like-classes-for-javascript.png","name":"JS.Class","links":{"site":"http://jsclass.jcoglan.com","github":"https://github.com/jcoglan/js.class"},"tags":[]}},{"title":"Joose","url":"/library/joose","id":"joose","library":{"id":"joose","description":"Joose is a complete modern object system for JavaScript based on concepts from many programming languages such as Ruby, Smalltalk, Perl and, well, JavaScript. It provides \"keywords\" or \"syntactic sugar\" for class declaration, object construction, inheritance and more. These keywords feel like they become a part of the language and you don't have to care about the implementation details of all these concepts.","logo":"/images/repo.png","name":"Joose","links":{"site":"http://joose.it","github":"https://github.com/Joose/Joose"},"tags":[]}},{"title":"jsface","url":"/library/jsface","id":"jsface","library":{"id":"jsface","description":"Small, fast, elegant, powerful, and cross platform JavaScript OOP library. Support main(), singleton, super call, private, mixins, plugins, AOP and more","logo":"/images/repo.png","name":"jsface","links":{"github":"https://github.com/tnhu/jsface"},"tags":[]}},{"title":"Proto.js","url":"/library/proto-js","id":"proto-js","library":{"id":"proto-js","description":"Proto.js – prototypes as classes\n\nThe core idea of Proto.js is that many things become simpler in JavaScript if you make the prototype the class and not the constructor.","logo":"/images/repo.png","name":"Proto.js ","links":{"site":"http://www.2ality.com/2011/06/prototypes-as-classes.html","github":"https://github.com/rauschma/proto-js"},"tags":[]}},{"title":"My.js","url":"/library/my-js","id":"my-js","library":{"id":"my-js","description":"Probably the fastest JS class system out there. 100% no wrappers, same perfs as hand-written pure JS classes.","logo":"http://myjs.fr/my-class/f33.png","name":"My.js","links":{"site":"https://jiem.github.io/my-class/","github":"https://github.com/jiem/my-class"},"tags":[]}},{"title":"Fiber.js","url":"/library/fiber-js","id":"fiber-js","library":{"id":"fiber-js","description":"Lightweight JavaScript prototypal inheritance library.","logo":"https://0.gravatar.com/avatar/344449f21a57e790db8361d7970b731a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-org-420.png","name":"Fiber.js","links":{"github":"https://github.com/linkedin/Fiber"},"tags":[]}},{"title":"ComposeJS","url":"/library/composejs","id":"composejs","library":{"id":"composejs","description":"ComposeJS is a lightweight JavaScript library for object composition \nComposeJS is robust object composition built on native JavaScript mechanisms. ComposeJS is lightweight (3K minified, 1K gzipped) JavaScript module based on the philosophy that JavaScript's powerful composition mechanisms, including prototype inheritance, closures, and object literals should be embraced, not contorted into an emulation of classes from other languages. It is designed to be secure, to-the-metal fast, simple, and easy to use. ComposeJS builds on some of the best concepts from mixins, (traits)[http://traitsjs.org], and deterministic multiple inheritance. ComposeJS assists in composing constructors and instances, providing shorthand and robustness for best practice JavaScript. In fact, in the documentation equivalent JavaScript code is provided to show exactly what is happening.","logo":"/images/repo.png","name":"ComposeJS","links":{"site":"https://dojotoolkit.org/","github":"https://github.com/kriszyp/compose"},"tags":[]}},{"title":"UberProto","url":"/library/uberproto","id":"uberproto","library":{"id":"uberproto","description":"JavaScript object inheritance sugar: Easy extension, mixins, super methods, proxies","logo":"/images/repo.png","name":"UberProto","links":{"site":"https://daffl.github.com/uberproto","github":"https://github.com/daffl/uberproto"},"tags":[]}},{"title":"declare.js","url":"/library/declare-js","id":"declare-js","library":{"id":"declare-js","description":"Declare is a library designed to allow writing object oriented code the same way in both the browser and node.js.","logo":"/images/repo.png","name":"declare.js","links":{"site":"https://doug-martin.github.com/declare.js","github":"https://github.com/doug-martin/declare.js"},"tags":[]}},{"title":"oorja","url":"/library/oorja","id":"oorja","library":{"id":"oorja","description":"Library for Object Oriented Javascript \nProvides basic Class structure for Javascript. Keeps in mind the C++ style OOP","logo":"/images/repo.png","name":"oorja","links":{"site":"https://maxpert.github.com/oorja/","github":"https://github.com/maxpert/oorja"},"tags":[]}},{"title":"Lava.ClassManager","url":"/library/lava-classmanager","id":"lava-classmanager","library":{"id":"lava-classmanager","description":"Standalone version of Lava.ClassManager - one of the fastest and most convenient class systems in the world.\n\nPerformance comparison of the fastest class systems:\n\n\nOverridden method calls: http://jsperf.com/js-inheritance-method-calls/2\nObject construction: http://jsperf.com/js-inheritance-object-construction\n\n\nQuick facts:\n\n\nSpeed is comparable to native hand-written classes\nPowerful features like run-time prototype patching and shared members\nClasses can be generated on server and in browser\nSupports multiple inheritance\n\n\nREADME in GitHub repository contains links to reference and tutorials.","logo":"http://www.lava-framework.com/www/export/logo90x90.png","name":"Lava.ClassManager","links":{"github":"https://github.com/kogarashisan/ClassManager"},"tags":["inheritance"]}},{"title":"Self","url":"/library/self","id":"self","library":{"id":"self","description":"Self is class-based sugar inspired from Python syntax that's perfect for continuation-passing style. No more var that = this;! The implicit this variable is changed to an explicit self variable that your inner functions inherit. Self plays nicely with existing prototypal, and Backbone OOP.","logo":"https://avatars3.githubusercontent.com/u/1907018?v=3","name":"Self","links":{"github":"https://github.com/munro/self"},"tags":[]}},{"title":"zoe.js","url":"/library/zoe-js","id":"zoe-js","library":{"id":"zoe-js","description":"zoe.js developed out of a need to manage the inheritance of objects and widgets with and without prototypal inheritance. Many JavaScript inheritance systems mimic classical inheritance systems, while the approach taken here is to create an inheritance model that naturally works with JavaScript objects using extension.","logo":"http://zoejs.org/zoejs.org/page/zoe-logo.png","name":"zoe.js","links":{"github":"https://github.com/zestjs/zoe"},"tags":["OO","inheritance"]}},{"title":"Species","url":"/library/species","id":"species","library":{"id":"species","description":"Species\nJS Class structure, Java style OOP\nOnly for Webkit and FF","logo":"https://avatars3.githubusercontent.com/u/7558483?v=3","name":"Species","links":{"github":"https://github.com/k33g/species"},"tags":[]}},{"title":"Concur","url":"/library/concur","id":"concur","library":{"id":"concur","description":"Sugar for infectious JavaScript inheritance, plus simple metaprogramming & mixins","logo":"/images/repo.png","name":"Concur","links":{"github":"https://github.com/insin/concur"},"tags":["inheritance","meta","mixins","sugar"]}},{"title":"id8","url":"/library/id8","id":"id8","library":{"id":"id8","description":"id8 is a small library designed to help you write object-oriented code that is easy to maintain and scale. id8 contains a Class constructor, as well as full-featured Observer, Callback and Hash classes.","logo":"/images/repo.png","name":"id8","links":{"github":"https://github.com/constantology/id8"},"tags":[]}},{"title":"defineObject","url":"/library/defineobject","id":"defineobject","library":{"id":"defineobject","description":"A bit of sugar for defining objects and their prototypes.","logo":"/images/repo.png","name":"defineObject","links":{"github":"https://github.com/smelnikov/defineObject"},"tags":["Node","non-commerce","npm","objects"]}},{"title":"mixing","url":"/library/mixing","id":"mixing","library":{"id":"mixing","description":"Functions to mix, filter, change and copy/clone objects.","logo":"/images/repo.png","name":"mixing","links":{"github":"https://github.com/gamtiq/mixing"},"tags":["change","clone","copy","filter","merge","mix","mixin"]}},{"title":"Namespacer.js","url":"/library/namespacer-js","id":"namespacer-js","library":{"id":"namespacer-js","description":"A small utility library for creating namespaces in the browser","logo":"/images/repo.png","name":"Namespacer.js","links":{"github":"https://github.com/sporto/namespacer.js"},"tags":[]}},{"title":"Clásico","url":"/library/clasico","id":"clasico","library":{"id":"clasico","description":"Clásico is designed to provide a simple DSL for classes and classical inheritance in JavaScript. Writing classes is usually a real pain in the ass, because JavaScript doesn't technically support classes--it just has objects. That's all fine and well, but if you're used to using classes, writing constructors and prototypes really complicates what should be fairly simple to do.","logo":"/images/repo.png","name":"Clásico","links":{"github":"https://github.com/davidjbeveridge/clasico"},"tags":[]}},{"title":"Classing{js}","url":"/library/classing-js","id":"classing-js","library":{"id":"classing-js","description":"Classing{js} creates a classical-like OOP interface directly into JavaScript.Without compilation or any pre-process, it behaves almost exactly like any regular classical object oriented environment. It provides function overloading, concrete (Final or Extensible) and abstract classes, defining components in the three access levels {public,private and protected}, static components, classical inheritance and method overriding, defining and implementing multiple interfaces, and much more.","logo":"https://pbs.twimg.com/profile_images/439133978495168512/ugyTth23.png","name":"Classing{js}","links":{"site":"https://mostafa-samir.github.io/classingjs/","github":"https://github.com/Mostafa-Samir/Classing-js"},"tags":[]}},{"title":"clutility","url":"/library/clutility","id":"clutility","library":{"id":"clutility","description":"Minimalistic class and inheritance utility for javascript. \n\nSmall (1KB). Supports inheritance from any constructor. Doesn't alter prototypes. Makes calling super methods trivial.","logo":"https://raw.githubusercontent.com/mweststrate/clutility/master/logo/logo.png","name":"clutility","links":{"site":"https://github.com/mweststrate/clutility","github":"https://github.com/mweststrate/clutility"},"tags":["Class","declare","inheritance"]}},{"title":"Speculoos","url":"/library/speculoos","id":"speculoos","library":{"id":"speculoos","description":"SpeculOOs is just a very simple Javascript Class notation, but ... CoffeeScript, TypeScript, ECMAScript 6 compliant ! (browser and nodejs)","logo":"/images/repo.png","name":"Speculoos","links":{"site":"https://github.com/k33g/speculoos","github":"https://github.com/k33g/speculoos"},"tags":[]}},{"title":"newClass","url":"/library/newclass","id":"newclass","library":{"id":"newclass","description":"Provides class like programming to JavaScript while staying close to prototypal inheritance.","logo":"/images/repo.png","name":"newClass","links":{"github":"https://github.com/edwinm/newClass"},"tags":["OOP","Object","Oriented","inheritance","prototypal","prototype"]}},{"title":"Ring.js","url":"/library/ring-js","id":"ring-js","library":{"id":"ring-js","description":"Ring.js is a class system in JavaScript allowing multiple inheritance.","logo":"http://ringjs.neoname.eu/static/img/ring_200.png","name":"Ring.js","links":{"site":"http://ringjs.neoname.eu/","github":"https://github.com/nicolas-van/ring.js"},"tags":[]}}]