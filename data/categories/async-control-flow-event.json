[{"title":"Async","url":"/library/async","id":"async","library":{"id":"async","description":"Async is a utility module which provides straight-forward, powerful functions for working with asynchronous JavaScript. Although originally designed for use with node.js, it can also be used directly in the browser.\n\nAsync provides around 20 functions that include the usual 'functional' suspects (map, reduce, filter, forEach…) as well as some common patterns for asynchronous control flow (parallel, series, waterfall…). All these functions assume you follow the node.js convention of providing a single callback as the last argument of your async function.","logo":"/images/repo.png","name":"Async","links":{"site":"https://caolan.github.io/async/","github":"https://github.com/caolan/async"},"tags":[]}},{"title":"q","url":"/library/q","id":"q","library":{"id":"q","description":"A tool for making and composing asynchronous promises in JavaScript\nIf a function cannot return a value or throw an exception without blocking, it can return a promise instead. A promise is an object that represents the return value or the thrown exception that the function may eventually provide. A promise can also be used as a proxy for a remote object to overcome latency.","logo":"/images/repo.png","name":"q","links":{"site":"https://documentup.com/kriskowal/q/","github":"https://github.com/kriskowal/q"},"tags":[]}},{"title":"Step","url":"/library/step","id":"step","library":{"id":"step","description":"A simple control-flow library for node.JS that makes parallel execution, serial execution, and error handling painless.","logo":"/images/repo.png","name":"Step","links":{"github":"https://github.com/creationix/step"},"tags":[]}},{"title":"Wind","url":"/library/wind","id":"wind","library":{"id":"wind","description":"Wind.js is an advanced library which enable us to control flow with plain JavaScript for asynchronous programming (and more) without additional pre-compiling steps.","logo":"/images/repo.png","name":"Wind","links":{"site":"http://windjs.org/","github":"https://github.com/JeffreyZhao/wind"},"tags":[]}},{"title":"Bean","url":"/library/bean","id":"bean","library":{"id":"bean","description":"Bean is a small, fast, cross-platform, framework-agnostic event manager designed for desktop, mobile, and touch-based browsers.","logo":"/images/repo.png","name":"Bean ","links":{"github":"https://github.com/fat/bean"},"tags":[]}},{"title":"BinaryJS","url":"/library/binaryjs","id":"binaryjs","library":{"id":"binaryjs","description":"BinaryJS is a lightweight framework that utilizes websockets to send, stream, and pipe binary data bidirectionally between browser javascript and Node.js.","logo":"https://0.gravatar.com/avatar/be1ac1f938a29fd51e8a649eb4d182bd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-org-420.png","name":"BinaryJS","links":{"site":"http://binaryjs.com","github":"https://github.com/binaryjs/binaryjs"},"tags":[]}},{"title":"js-signals","url":"/library/js-signals","id":"js-signals","library":{"id":"js-signals","description":"Event system inspired by AS3 Signals.\n\nA Signal is similar to an Event Emitter/Dispatcher or a Pub/Sub system, the main difference is that each event type has it's own controller and doesn't rely on strings to broadcast/subscribe to events.","logo":"/images/repo.png","name":"js-signals","links":{"site":"https://millermedeiros.github.com/js-signals/","github":"https://github.com/millermedeiros/js-signals"},"tags":["pubsub"]}},{"title":"Visibility.js","url":"/library/visibility-js","id":"visibility-js","library":{"id":"visibility-js","description":"Visibility.js – a wrapper for the Page Visibility API. It allows you to determine whether your web page is visible to a user, is hidden in background tab or is prerendering. It allows you to use the page visibility state in JavaScript logic and improve browser performance by disabling unnecessary timers and AJAX requests, or improve user interface experience (for example, by stopping video playback or slideshow when user switches to another browser tab).","logo":"/images/repo.png","name":"Visibility.js","links":{"github":"https://github.com/ai/visibility.js"},"tags":["api","html5","page","ui","visibility"]}},{"title":"asyncSteps","url":"/library/asyncsteps","id":"asyncsteps","library":{"id":"asyncsteps","description":"asynchronous step chain for javascript","logo":"/images/repo.png","name":"asyncSteps","links":{"github":"https://github.com/getify/asyncSteps.js"},"tags":["async","control","flow","step"]}},{"title":"tamejs","url":"/library/tamejs","id":"tamejs","library":{"id":"tamejs","description":"JavaScript code rewriter for taming async-callback-style code \nThis package is a source-to-source translator that outputs JavaScript. The input dialect looks a lot like JavaScript, but introduces the await primitive, which allows asynchronous callback style code to work more like straight-line threaded code. tamejs is written in JavaScript.\n\nOne of the core powers of the tamejs rewriting idea is that it's fully compatible with existing vanilla-JS code (like node.js's libraries). That is, existing node.js can call code that's been output by the tamejs rewriter, and conversely, code output by the tamejs rewriter can call existing node.js code. Thus, tamejs is incrementally deployable --- you can keep all of your old code and just write the new bits in tamejs! So try it out and let us know what you think.","logo":"http://tamejs.org/img/temp_logo.png","name":"tamejs","links":{"site":"http://tamejs.org","github":"https://github.com/maxtaco/tamejs"},"tags":[]}},{"title":"postal.js","url":"/library/postal-js","id":"postal-js","library":{"id":"postal-js","description":"Postal.js is an in-memory message bus - very loosely inspired by AMQP - written in JavaScript. Postal.js runs in the browser, or on the server-side using Node.js. It takes the familiar \"eventing-style\" paradigm (of which most JavaScript developers are familiar) and extends it by providing \"broker\" and subscriber implementations which are more sophisticated than what you typically find in simple event delegation.","logo":"https://0.gravatar.com/avatar/d41d8cd98f00b204e9800998ecf8427e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-org-420.png","name":"postal.js","links":{"site":"http://freshbrewedcode.com/jimcowart","github":"https://github.com/postaljs/postal.js"},"tags":["aggregator","bus","event","messaging"]}},{"title":"machina.js","url":"/library/machina-js","id":"machina-js","library":{"id":"machina-js","description":"Machina.js is a JavaScript framework for highly customizable finite state machines (FSMs). Many of the ideas for machina have been loosely inspired by the Erlang/OTP FSM behaviors.","logo":"/images/repo.png","name":"machina.js","links":{"site":"http://freshbrewedcode.com/jimcowart","github":"https://github.com/ifandelse/machina.js"},"tags":["finite","machine","state","workflow"]}},{"title":"LucidJS","url":"/library/lucidjs","id":"lucidjs","library":{"id":"lucidjs","description":"LucidJS is a chainable event emitter library. It offers several unique features such as set events, emitter piping, DOM node encapsulation, sub events, along with the usual event triggering and binding. LucidJS emitters also feature meta events that allow listening for event binding and event triggering.","logo":"http://i1-scripts.softpedia-static.com/thumbnails/LucidJS-thumb.png?1347385441","name":"LucidJS","links":{"site":"https://robertwhurst.github.com/LucidJS","github":"https://github.com/RobertWHurst/LucidJS"},"tags":[]}},{"title":"JSDeferred","url":"/library/jsdeferred","id":"jsdeferred","library":{"id":"jsdeferred","description":"Asynchronous library in JavaScript. Standalone and Compact","logo":"/images/repo.png","name":"JSDeferred","links":{"site":"http://cho45.stfuawsc.com/jsdeferred/","github":"https://github.com/cho45/jsdeferred"},"tags":[]}},{"title":"NimbleJS","url":"/library/nimblejs","id":"nimblejs","library":{"id":"nimblejs","description":"Functional flow-control for JavaScript, that is lightweight and portable. Runs on Node.js and cross-browser, providing a small set of powerful tools, supporting sync and async JavaScript. Combines the most useful features of the underscore and async libraries with a simple API and a vastly reduced filesize.","logo":"/images/repo.png","name":"NimbleJS","links":{"site":"https://caolan.github.com/nimble","github":"https://github.com/caolan/nimble"},"tags":["async"]}},{"title":"Deferred","url":"/library/deferred","id":"deferred","library":{"id":"deferred","description":"Deferred – Asynchronous JavaScript with Promises\nPromises in a simple and powerful way. Implementation originally inspired by Kris Kowal's Q\n\nDeferred is complete, fastest and most natural promise implementation in JavaScript, with Deferred you can write clear maintainable code that takes maximum out of asynchronicity, in fact due to multi-dimensional nature of promises (chaining and nesting) you're forced to program declaratively.","logo":"/images/repo.png","name":"Deferred ","links":{"github":"https://github.com/medikoo/deferred"},"tags":[]}},{"title":"Seq","url":"/library/seq","id":"seq","library":{"id":"seq","description":"Chainable asynchronous flow control for node.js with sequential and parallel primitives and pipeline-style error handling","logo":"/images/repo.png","name":"Seq","links":{"github":"https://github.com/substack/node-seq"},"tags":[]}},{"title":"Flow JS","url":"/library/flow-js","id":"flow-js","library":{"id":"flow-js","description":"Flow-JS provides a continuation-esque construct that makes it much easier to express multi-step asynchronous logic in non-blocking callback-heavy environments like Node.js or javascript in the web browser.","logo":"/images/repo.png","name":"Flow JS","links":{"github":"https://github.com/willconant/flow-js"},"tags":[]}},{"title":"Catiline","url":"/library/communist","id":"communist","library":{"id":"communist","description":"Library all about web workers. Simplifies making and using web workers to parallelize code with an easy promise based syntax.(formally Communist same library but now your boss won't judge you)","logo":"https://calvinmetcalf.github.io/catiline/website/apple-touch-icon-144x144-precomposed.png","name":"Catiline","links":{"site":"http://catilinejs.com/","github":"https://github.com/calvinmetcalf/catiline"},"tags":["parallel","worker"]}},{"title":"Fibrous","url":"/library/fibrous","id":"fibrous","library":{"id":"fibrous","description":"Easily mix asynchronous and synchronous programming styles in node.js.","logo":"https://0.gravatar.com/avatar/6bd4aa3b074535ad53165bd82308f925?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-org-420.png","name":"Fibrous","links":{"github":"https://github.com/goodeggs/fibrous"},"tags":[]}},{"title":"trycatch","url":"/library/trycatch","id":"trycatch","library":{"id":"trycatch","description":"An asynchronous exception handler with long stack traces for node.js","logo":"/images/repo.png","name":"trycatch","links":{"github":"https://github.com/crabdude/trycatch"},"tags":[]}},{"title":"Frame.js","url":"/library/frame-js","id":"frame-js","library":{"id":"frame-js","description":"Frame.js is a flow control library and script loader for Javascript applications.\n\nFrame includes and acts as an interface for the LABjs library loader. So you can use Frame to load script libraries from both local and remote servers, cross-browser, with no cross-site scripting restrictions.\n\nWhile many function sequencers exist, Frame.js focuses on application-level synchronous function management, includes a library loader to mix-and-match between remote scripts, local scripts, and functions, and provides a basic set of debugging and unit testing tools.\n\nFrame is like require.js, but designed for the frontend, with debugging tools, and it clocks in at just under 11k (compared to require.js's minified 25k).","logo":"/images/repo.png","name":"Frame.js","links":{"site":"http://framejs.tumblr.com","github":"https://github.com/bishopZ/Frame.js"},"tags":["application","async","boot","job","library","loader","loading","manager"]}},{"title":"Resistance","url":"/library/resistance","id":"resistance","library":{"id":"resistance","description":"Resistance is a tiny (579 bytes, 347 bytes gzipped) flow control library for javascript.","logo":"/images/repo.png","name":"Resistance","links":{"site":"http://jga.me/blog/tags/resistance","github":"https://github.com/jgallen23/resistance"},"tags":[]}},{"title":"MonkeyBars","url":"/library/monkeybars","id":"monkeybars","library":{"id":"monkeybars","description":"A task based library that provides a simple structure for handling singular, sequential and parallel units of code.\n\nThe overall architecture is based off of the composite and decorator patterns. These patterns lend themselves very well to a task based library, where tasks can contain other tasks all contributing to the overall flow of an operation.\n\nThis library also makes it possible to run tasks concurrrently with help of HTML5 WebWorkers and Blobs.\n\nThe library itself has no hard ties to the browser, and because of this it works both in client-side and server-side javascript projects.\n\nIndividual tasks are highly extendable and can be extended to form all sorts of interesting processes.","logo":"/images/repo.png","name":"MonkeyBars","links":{"site":"https://mcgaryes.github.com/monkeybars/","github":"https://github.com/mcgaryes/monkeybars"},"tags":["commercial","parallel","sequence","task"]}},{"title":"Shield UI DataSource component","url":"/library/shield-ui-datasource-component","id":"shield-ui-datasource-component","library":{"id":"shield-ui-datasource-component","description":"The Shield UI DataSource is a versatile data component that aims to simplify data retrieval and manipulation. It provides out-of-the-box binding to various data sources:\n\nJavascript arrays and objects\nJSON web services\nJSONP web services\nXML strings and web services\nHTML table elements\n\nThrough its flexible configuration, Shield UI DataSource abstracts out heterogenous data retrieval into an intuitive, unified API. It simplifies working with client-side data using JavaScript and enables data sharing across different components on the same HTML page. Shield UI DataSource fully supports paging, sorting and filtering both on the client-side and server-side.","logo":"https://pbs.twimg.com/profile_images/432842026199949312/AcLRAAXS_400x400.png","name":"Shield UI DataSource component","links":{"site":"https://www.shieldui.com/documentation/datasource"},"tags":["DataSource","jquery"]}},{"title":"observe","url":"/library/observe","id":"observe","library":{"id":"observe","description":"The object-observer pattern in javascript. Listen to changes that happen on your deep objects and arrays.","logo":"/images/repo.png","name":"observe","links":{"site":"https://github.com/Tixit/observe","github":"https://github.com/Tixit/observe"},"tags":["MVC","MutationObserver","binding","data","event","events","observe","observer","pattern","publish","pubsub","reactive","subscribe"]}},{"title":"Yielding","url":"/library/yielding","id":"yielding","library":{"id":"yielding","description":"Easy generators","logo":"/images/repo.png","name":"Yielding","links":{"site":"https://npmjs.org/package/yielding","github":"https://github.com/mikach/yielding"},"tags":["async","callbacks","conrol","es6","flow","generators","yield"]}},{"title":"asyncGate","url":"/library/asyncgate","id":"asyncgate","library":{"id":"asyncgate","description":"asynchronous gate for javascript","logo":"/images/repo.png","name":"asyncGate","links":{"github":"https://github.com/getify/asyncGate.js"},"tags":["async","control","flow","gate"]}},{"title":"Stepup","url":"/library/stepup","id":"stepup","library":{"id":"stepup","description":"A simple control-flow library for node.JS that makes parallel execution, serial execution, and error handling painless.\n\nAdditionally, stepup provides error coalescing, asynchronous try catch, and long stack traces.","logo":"/images/repo.png","name":"Stepup","links":{"github":"https://github.com/crabdude/stepup"},"tags":[]}},{"title":"XXSPubSub","url":"/library/xxspubsub","id":"xxspubsub","library":{"id":"xxspubsub","description":"Extra Extra Small publish/subscribe micro-framework in 182 bytes of JavaScript and 111 bytes with jQuery.","logo":"/images/repo.png","name":"XXSPubSub","links":{"site":"https://dciccale.github.com/xxspubsub/","github":"https://github.com/dciccale/xxspubsub"},"tags":["pubsub"]}},{"title":"Node Each","url":"/library/node-each","id":"node-each","library":{"id":"node-each","description":"Chained and parallel async iterator in one elegant function\nNode Each is a single elegant function to iterate asynchronously over elements both in sequential, parallel and concurrent mode.","logo":"https://avatars2.githubusercontent.com/u/8912778?v=3","name":"Node Each","links":{"site":"http://www.adaltas.com/projects/node-each","github":"https://github.com/wdavidw/node-each"},"tags":[]}},{"title":"RhoConnect javascript client","url":"/library/rhoconnect-javascript-client","id":"rhoconnect-javascript-client","library":{"id":"rhoconnect-javascript-client","description":"A javascript client library for the RhoConnect App Integration Server.\n\nUsing rhoconnect.js, your application's model data will transparently synchronize with a mobile application built using the Rhodes framework, or any of the available RhoConnect clients. This client includes built-in support for SenchaTouch data API and Persistence.js models.","logo":"https://0.gravatar.com/avatar/0741e24f8e42a3dc5fabfcecb1b9f269?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-org-420.png","name":"RhoConnect javascript client","links":{"site":"http://www.rhomobile.com","github":"https://github.com/rhomobile/rhoconnect.js"},"tags":[]}},{"title":"Bonobo","url":"/library/bonobo","id":"bonobo","library":{"id":"bonobo","description":"A lightweight (~1.2kb gzipped) wrapper for the HTML5 Web Worker API. Bonobo allows you to define workers inline, negating the need for seperate JavaScript files.","logo":"/images/repo.png","name":"Bonobo","links":{"site":"https://github.com/f5io/bonobo-js","github":"https://github.com/f5io/bonobo-js"},"tags":["worker"]}},{"title":"FuturesJS","url":"/library/futuresjs","id":"futuresjs","library":{"id":"futuresjs","description":"FuturesJS is a JavaScript library which (when used as directed) simplifies handling Callbacks, Errbacks, Promises, Subscriptions, Joins, Synchronization of asynchronous data, and Eventually Consistent data. It is akin to this well documented this MSDN library, but with a liberal MIT license.","logo":"/images/repo.png","name":"FuturesJS ","links":{"site":"http://coolaj86.info/futures/"},"tags":[]}},{"title":"NodeJS Twisted Deferreds","url":"/library/nodejs-twisted-deferreds","id":"nodejs-twisted-deferreds","library":{"id":"nodejs-twisted-deferreds","description":"Provides the Twisted Deferred syntax in Javascript. \nDirect port of python's Twisted Deferred module to coffeescript and thus javascript.","logo":"/images/repo.png","name":"NodeJS Twisted Deferreds","links":{"site":"http://twistedmatrix.com/documents/current/api/twisted.internet.defer.Deferred.html","github":"https://github.com/my8bird/nodejs-twisted-deferreds"},"tags":[]}},{"title":"SignalFire.js","url":"/library/signalfire-js","id":"signalfire-js","library":{"id":"signalfire-js","description":"RTCPeerConnection signaling library/npm module. It does the signaling and then gets out of your way.","logo":"https://si0.twimg.com/profile_images/3678035416/46cac43bd2589e13392cb8d6e0dc853d.png","name":"SignalFire.js","links":{"github":"https://github.com/traviswimer/SignalFire.js"},"tags":["Signaling","webrtc"]}},{"title":"TAsync","url":"/library/tasync","id":"tasync","library":{"id":"tasync","description":"TAsync is a javascript module to help the development of asynchronous code. It can be both used with node.js or directly in the browser. TAsync can be characterized as a future/promise library with some unique features:\n\nfollows stack traces across asynchronous calls,\nreal and future values can be mixed freely,\nexecution can be throttled in logical execution time.","logo":"/images/repo.png","name":"TAsync","links":{"github":"https://github.com/mmaroti/tasync"},"tags":["future","promise"]}},{"title":"Thread.js","url":"/library/thread-js","id":"thread-js","library":{"id":"thread-js","description":"Thread.js offers an easy way to create inline-threads.","logo":"/images/repo.png","name":"Thread.js","links":{"site":"https://1unitedpower.github.com/thread.js/","github":"https://github.com/1UnitedPower/thread.js"},"tags":["Multithreading","Thread","Webworker","worker"]}},{"title":"instinct.js","url":"/library/instinct-js","id":"instinct-js","library":{"id":"instinct-js","description":"Instinct.js is a lightweight asynchronous library with a twist.  Function arguments are parsed to both define dependencies and allocate dependencies to corresponding local variables in the scope of the function, when resolved.   Parallel and/or sequential execution chains are automatically (and greedily) resolved as required.  1.4k minified.","logo":"/images/repo.png","name":"instinct.js","links":{"github":"https://github.com/ZJONSSON/instinct.js/"},"tags":[]}},{"title":"across-tabs","url":"/library/across-tabs","id":"across-tabs","library":{"id":"across-tabs","description":"Easy communication between cross-origin browser tabs","logo":"https://raw.githubusercontent.com/wingify/across-tabs/master/across-tabs.png","name":"across-tabs","links":{"github":"https://github.com/wingify/across-tabs"},"tags":["browser-tabs-communication","cross-origin","es6","postMessage"]}},{"title":"Bluebird","url":"/library/bluebird","id":"bluebird","library":{"id":"bluebird","description":"Bluebird is a full featured promise library with unmatched performance.","logo":"/images/repo.png","name":"Bluebird","links":{"github":"https://github.com/petkaantonov/bluebird"},"tags":[]}},{"title":"__SE__","url":"/library/se-sharedevents","id":"se-sharedevents","library":{"id":"se-sharedevents","description":"SharedEvents (SE): library for exchange events, data and tasks between browser tabs.\n\nRequirements: Blob, Blob.URL, Worker, localStorage","logo":"/images/repo.png","name":"__SE__","links":{"github":"https://github.com/Sombressoul/__SE__"},"tags":["data","events","exchange","tab","tabs"]}},{"title":"Jailed","url":"/library/jailed","id":"jailed","library":{"id":"jailed","description":"With Jailed you can:\n\n\nexecute an untrusted code in a sandboxed environment of a worker (in a browser) or a restricted subprocess (Node.js);\nexport a set of functions into a sandbox and backwards (thus defining a precise permissions);\nrun untrusted code from a string or from a file;\nisomorphic syntax works unchanged both in browser and in Node.js;\ncontrol the execution launching and shutting down the code anytime;","logo":"/images/repo.png","name":"Jailed","links":{"github":"https://github.com/asvd/jailed"},"tags":["isomorphic","node.js","sandbox","web-workers"]}},{"title":"QueueManager","url":"/library/queuemanager","id":"queuemanager","library":{"id":"queuemanager","description":"Handle gazillion ajax calls, handle all kind of queues in a chain !","logo":"/images/repo.png","name":"QueueManager","links":{"site":"https://maggiben.github.io/QueueManager/","github":"https://github.com/maggiben/QueueManager.git"},"tags":["Queue","ajax","async","pool"]}},{"title":"snc","url":"/library/snc","id":"snc","library":{"id":"snc","description":"Asyncronous Iterators Collection","logo":"/images/repo.png","name":"snc","links":{"site":"https://www.npmjs.com/package/snc","github":"https://github.com/warlock/snc"},"tags":["array","async","await","defered","each","flow","iterator","javascript","modules","performance","promise","stdlib","then","tools","util","utils","waterfall"]}},{"title":"Contra","url":"/library/contra","id":"contra","library":{"id":"contra","description":"λ aims to stay small and simple, while powerful. Inspired by async and lodash. Methods are implemented individually and not as part of a whole. That design helps when considering to export functions individually. If you need all the methods in async, then stick with it. Otherwise, you might want to check λ out!","logo":"https://raw.github.com/bevacqua/contra/master/resources/contra.png","name":"Contra","links":{"github":"https://github.com/bevacqua/contra"},"tags":[]}}]