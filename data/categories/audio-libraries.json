[{"title":"howler.js","url":"/library/howler-js","id":"howler-js","library":{"id":"howler-js","description":"Browsers have come a long way over the years, and we are now able to achieve amazing results using all of the great new technologies often referred to as HTML5. However, generally speaking, audio still sucks. Thankfully, Google decided to create Web Audio API and make all our lives easier. The problem is that only the latest browsers support this new-fangled browser audio, so what are we to do?\n\nWe were presented with this very question while developing our new HTML5 game and set out to find a library that provided the functionality we needed, without all of the bloat, while still supporting the majority of browsers. Unfortunately, we didn't find anything that met our needs. So, we decided to create our own library and open source it. This library works great for games, but it can work just as well for any other audio-related web app.","logo":"https://github-camo.global.ssl.fastly.net/7a67c2205dba547f08e590a8c7d5d6c452f72ea2/687474703a2f2f676f6c646669726573747564696f732e636f6d2f70726f6a2f686f776c65726a732f686f776c65726a735f6c6f676f2e706e67","name":"howler.js","links":{"site":"http://howlerjs.com","github":"https://github.com/goldfire/howler.js"},"tags":["audio","mp3","music"]}},{"title":"Buzz","url":"/library/buzz","id":"buzz","library":{"id":"buzz","description":"Buzz is a small but powerful Javascript library that allows you to easily take advantage of the new HTML5 audio element. It tries to degrade properly on non-modern browsers.","logo":"http://webification.com/wp-content/uploads/2011/07/buzz.png","name":"Buzz","links":{"site":"http://buzz.jaysalvat.com","github":"https://github.com/jaysalvat/buzz"},"tags":[]}},{"title":"DSP.js","url":"/library/dsp-js","id":"dsp-js","library":{"id":"dsp-js","description":"DSP.js is a comprehensive digital signal processing library for javascript. \nIt includes many functions for signal analysis and generation, including \nOscillators(sine, saw, square, triangle), Window functions (Hann, Hamming, etc), \nEnvelopes(ADSR), IIR Filters(lowpass, highpass, bandpass, notch), FFT and DFT \ntransforms, Delays, Reverb.","logo":"/images/repo.png","name":"DSP.js","links":{"site":"http://weare.buildingsky.net","github":"https://github.com/corbanbrook/dsp.js"},"tags":[]}},{"title":"createjs.SoundJS","url":"/library/createjs-soundjs","id":"createjs-soundjs","library":{"id":"createjs-soundjs","description":"SoundJS is a library to make working with audio on the web easier. It provides a consistent API for playing audio in different browsers, including using a target plugin model to provide an easy way to provide additional audio plugins like Web Audio, and a Flash fallback.","logo":"https://2.gravatar.com/avatar/2e19351a9c80281d002b10b09461d277?d=https%3A%2F%2Fidenticons.github.com%2F078f86ce931b09bee33749863c27482f.png&r=x","name":"createjs.SoundJS","links":{"site":"http://www.soundjs.com/","github":"https://github.com/CreateJS/SoundJS/"},"tags":[]}},{"title":"audio.js","url":"/library/audio-js","id":"audio-js","library":{"id":"audio-js","description":"audio.js is a drop-in javascript library that allows HTML5â€™s  tag to be used anywhere.","logo":"/images/repo.png","name":"audio.js","links":{"site":"https://kolber.github.com/audiojs","github":"https://github.com/kolber/audiojs"},"tags":["audio","html5"]}},{"title":"Audiolet","url":"/library/audiolet","id":"audiolet","library":{"id":"audiolet","description":"Audiolet is a JavaScript library for real-time audio synthesis and composition from within the browser. It uses graph-based routing and pattern-based scheduling to make complex audio simple to program, and easy to understand.","logo":"/images/repo.png","name":"Audiolet","links":{"site":"https://oampo.github.com/Audiolet/","github":"https://github.com/oampo/audiolet"},"tags":[]}},{"title":"audiolib.js","url":"/library/audiolib-js","id":"audiolib-js","library":{"id":"audiolib-js","description":"audiolib.js is a powerful toolkit for audio written in JS.\n\nIt ships with most of the common tools such as:\n\nReverbs\nComb/IIR/Biquad/All-Pass/Low-Pass/Band-Pass/High-Pass filters\nDelays\nOscillators\nFFT and other analyzing tools\nStep sequencers\nEnvelope controls\nNoise generators\nSamplers\nIn addition, it hosts these tools in a comprehensive framework, that makes it simple to write a single effect and provides the higher level abstraction on top of that, making the whole system comfortable for both users and plugin authors.\n\nAs for the higher level abstraction, audiolib.js features a sophisticated automation API, alongside with pre-processing hooks, sample level access and buffer level management.","logo":"/images/repo.png","name":"audiolib.js ","links":{"site":"http://audiolibjs.org/","github":"https://github.com/jussi-kalliokoski/audiolib.js"},"tags":[]}},{"title":"Aurora.js","url":"/library/aurora-js","id":"aurora-js","library":{"id":"aurora-js","description":"Aurora.js is a framework that makes writing audio decoders in JavaScript easier. It handles common tasks for you such as dealing with binary data, and the decoding pipeline from source to demuxer to decoder, and finally to the audio hardware itself by abstracting browser audio APIs. Aurora contains two high level APIs for inspecting and playing back decoded audio, and it is easily extendible to support more sources, demuxers, decoders, and audio devices.","logo":"https://0.gravatar.com/avatar/c5bfbfedcd54c6e129ef2079df958e46?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-org-420.png","name":"Aurora.js","links":{"site":"http://audiocogs.org/codecs","github":"https://github.com/audiocogs/aurora.js"},"tags":[]}},{"title":"tuna","url":"/library/tuna","id":"tuna","library":{"id":"tuna","description":"An audio effects library for the Web Audio API.","logo":"https://i.chzbgr.com/completestore/12/9/4/rjttPiC7WE6S4Bi22aYp1A2.jpg","name":"tuna","links":{"github":"https://github.com/Dinahmoe/tuna"},"tags":[]}},{"title":"dynamicaudio.js","url":"/library/dynamicaudio-js","id":"dynamicaudio-js","library":{"id":"dynamicaudio-js","description":"An interface for writing audio with Firefox's new audio data API with a Flash fallback for older browsers.","logo":"/images/repo.png","name":"dynamicaudio.js","links":{"github":"https://github.com/bfirsh/dynamicaudio.js/"},"tags":[]}},{"title":"ion.sound","url":"/library/ion-sound","id":"ion-sound","library":{"id":"ion-sound","description":"Today websites are full of events (new mail, new chat-message, content update etc.). Often it is not enough to indicate this events only visually to get user attention. You need sounds! This library, made for playing small sounds, will help you with this task.","logo":"/images/repo.png","name":"ion.sound","links":{"site":"http://ionden.com/a/plugins/ion.sound/en.html","github":"https://github.com/IonDen/ion.sound"},"tags":[]}},{"title":"XAudioJS","url":"/library/xaudiojs","id":"xaudiojs","library":{"id":"xaudiojs","description":"A minimal cross-browser API for writing PCM audio samples:\n\nThis simple JavaScript library abstracts the push-for-audio API of Mozilla Audio, the MediaStream API in experimental Firefox Nightlies, and the passive callback API of Web Audio. This library introduces an abstraction layer that provides a push-for-audio and a callback API in one. We even provide a flash fallback to bring us to a total of 4 APIs supported","logo":"/images/repo.png","name":"XAudioJS","links":{"github":"https://github.com/grantgalitz/XAudioJS"},"tags":[]}},{"title":"Javascript AudioFX","url":"/library/javascript-audiofx","id":"javascript-audiofx","library":{"id":"javascript-audiofx","description":"A Simple HTML5 Audio Helper Library\n\nSimple HTML5  support.\n\nEasily play() and stop() any audio track.\nAdd support for audio pools for short, repeating, overlapping sounds.\nAdd support for loop in browsers that don't natively support it.\nLoad appropriate audio format based on current browser support (ogg|mp3|m4a|wav)\nCallback when audio has loaded and canplay","logo":"/images/repo.png","name":"Javascript AudioFX ","links":{"site":"http://codeincomplete.com/posts/2011/9/17/revisiting_html5_audio/","github":"https://github.com/jakesgordon/javascript-audio-fx/"},"tags":[]}},{"title":"jsmad","url":"/library/jsmad","id":"jsmad","library":{"id":"jsmad","description":"jsmad is a pure javascript MP3 decoder, based on libmad, with an ID3 decoder written from scratch.\n\nFor example, jsmad allows Firefox 4.0+ to play MP3s without any Flash. Faster loading times. Fewer security holes. No 64-bit headaches on Linux. Fewer memory leaks.\n\njsmad opens up a whole world of realtime audio applications implemented in javascript: dj-mixers, samplers, sequencers, all these applications benefit from using mp3s as audio source.","logo":"https://0.gravatar.com/avatar/c5bfbfedcd54c6e129ef2079df958e46?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-org-420.png","name":"jsmad ","links":{"site":"http://jsmad.org","github":"https://github.com/audiocogs/jsmad"},"tags":[]}},{"title":"Audia","url":"/library/audia","id":"audia","library":{"id":"audia","description":"Audia reimplements and extends the HTML5 Audio object using the Web Audio API.","logo":"/images/repo.png","name":"Audia ","links":{"site":"http://www.lostdecadegames.com/audia-is-a-library-for-simplifying-the-web-audio-api/","github":"https://github.com/richtaur/audia"},"tags":[]}},{"title":"music.js","url":"/library/music-js","id":"music-js","library":{"id":"music-js","description":"music.js is a music creation library for javascript. It includes functions and data sets to generate notes, intervals, chords, and scales.","logo":"/images/repo.png","name":"music.js","links":{"github":"https://github.com/GregJ/music.js"},"tags":[]}},{"title":"AudioNode.js","url":"/library/audionode-js","id":"audionode-js","library":{"id":"audionode-js","description":"Node based audio abstraction layer\nThis lib is intended to be a javascript implemention of the proposed Google Web Audio API \nby Chris Rogers","logo":"/images/repo.png","name":"AudioNode.js","links":{"site":"http://weare.buildingsky.net","github":"https://github.com/corbanbrook/audionode.js"},"tags":[]}},{"title":"audiodata","url":"/library/audiodata","id":"audiodata","library":{"id":"audiodata","description":"JS interface to encapsulate the Audio Data API methods","logo":"/images/repo.png","name":"audiodata","links":{"github":"https://github.com/notmasteryet/audiodata"},"tags":[]}},{"title":"pitch.js","url":"/library/pitch-js","id":"pitch-js","library":{"id":"pitch-js","description":"pitch.js is a pitch detection library written in JavaScript. It is based on the excellent code used in performous. While mainly aimed for human voice, it can also be used with other instruments.","logo":"https://0.gravatar.com/avatar/c5bfbfedcd54c6e129ef2079df958e46?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-org-420.png","name":"pitch.js","links":{"github":"https://github.com/audiocogs/pitch.js"},"tags":[]}},{"title":"jWebAudio","url":"/library/jwebaudio","id":"jwebaudio","library":{"id":"jwebaudio","description":"Web Audio seeks to process and synthesize audio in web applications. jWebAudio keeps the technical details of Web Audio under the hood and makes it easier to control your audio.","logo":"https://01org.github.io/jWebAudio/examples/image/title.png","name":"jWebAudio","links":{"site":"https://01org.github.io/jWebAudio/","github":"https://github.com/01org/jWebAudio"},"tags":[]}},{"title":"Fifer","url":"/library/fifer","id":"fifer","library":{"id":"fifer","description":"A conductor for HTML5 Audio with Flash Fallback","logo":"/images/repo.png","name":"Fifer","links":{"site":"https://github.com/f5io/fifer-js","github":"https://github.com/f5io/fifer-js"},"tags":["audio"]}},{"title":"AR-Synth.js - Theremin Like","url":"/library/ar-synth-js-javascript-theremin-ar-synth","id":"ar-synth-js-javascript-theremin-ar-synth","library":{"id":"ar-synth-js-javascript-theremin-ar-synth","description":"Color tracking synthesizer using webkitAudioContext and getUserMedia (webcam)","logo":"/images/repo.png","name":"AR-Synth.js - Theremin Like","links":{"site":"https://agnostic.github.io/AR-Synth.js/","github":"https://github.com/Agnostic/AR-Synth.js"},"tags":["audio","augmented","html5","reality","synth","tracking","webcam"]}},{"title":"SoundJS","url":"/library/soundjs","id":"soundjs","library":{"id":"soundjs","description":"SoundJS is a library that provides browsers with a JavaScript sound API that first tries audio files with native HTML5 Audio and falls back to Flash when necessary.\n\nSpecifically, the SoundJS API offers the ability to play the same sound file more than once at a time, even while the same sound is already playing. This is also known as multi-layering sounds.","logo":"/images/repo.png","name":"SoundJS","links":{"site":"http://soundjs.tootallnate.net/tests/super-mario-world/","github":"https://github.com/TooTallNate/SoundJS"},"tags":["html5"]}},{"title":"Wedge.js","url":"/library/wedge-js","id":"wedge-js","library":{"id":"wedge-js","description":"Tiny audio library that provides HTML5 apps with low latency audio if available, and falls back to Buzz! by Jay Salvat.\n\nNamed after a wedge monitor speaker that you'd get onstage at a gig, this library is designed for people who want very simple playback - no fancy effects, only loading and playing and looping sounds. It's targeted at cross-platform development, to make it easy to target both desktop and mobile HTML5 apps.\n\nThis means you can write your HTML5 application to play sound using Wedge.js, and if accelerated audio is availble through Cordova, that will be used. Otherwise, it will fall back to Buzz!. This means you can develop on your desktop and still hear audio, whilst still getting the benefits of low latency audio when you compile.\n\nUnder the hood, it uses the LowLatencyAudio plugin for Cordova to provide much more responsive sound than the native HTML5 web audio API.","logo":"https://0.gravatar.com/avatar/fdc39f98e3532c2cbf9821de69e06d9b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-org-420.png","name":"Wedge.js","links":{"github":"https://github.com/boxuk/wedge.js"},"tags":[]}},{"title":"timbre.js","url":"/library/timbre-js","id":"timbre-js","library":{"id":"timbre-js","description":"Timbre.js provides a functional processing and synthesizing audio in your web apps with modern JavaScript's way like jQuery or node.js. It has many T-Object (formally: Timbre Object) that connected together to define the graph-based routing for overall audio rendering. It is a goal of this project to approach the next generation audio processing for web.","logo":"/images/repo.png","name":"timbre.js","links":{"site":"https://mohayonao.github.io/timbre.js/","github":"https://github.com/mohayonao/timbre.js"},"tags":[]}},{"title":"Twilio.js","url":"/library/twilio-js","id":"twilio-js","library":{"id":"twilio-js","description":"Twilio.js allows you to establish audio connections between a web browser and a Twilio Application. This means you can open inbound and outbound audio connections to Twilio for building soft phones, walkie-talkies, conference calls, click-to-talk systems, and more, all from the browser.","logo":"/images/repo.png","name":"Twilio.js","links":{"site":"https://www.twilio.com/docs/client/twilio-js"},"tags":["audio"]}},{"title":"quicksound.js","url":"/library/quicksound-js","id":"quicksound-js","library":{"id":"quicksound-js","description":"A very simple JavaScript sound library using the Web Audio API and a fallback to flash. On the desktop it works with any browser that supports either Web Audio API or the flash fallback. On mobile it works with Chrome or Firefox for Android, and iOS Safari as of iOS 6. See the following for Web Audio API support:\n\nhttp://caniuse.com/#feat=audio-api\n\nTo use this library, download the minified (or non-minified) JS in the release directory, as well as the swf file which must be placed next to the HTML in which you include the JS.","logo":"/images/repo.png","name":"quicksound.js","links":{"github":"https://github.com/tfriedel6/quicksound.js"},"tags":[]}},{"title":"Plivo","url":"/library/plivo","id":"plivo","library":{"id":"plivo","description":"Plivo WebSDK allows you to make and receive calls using Plivo applications directly from any web browser. Using our SDK you can create applications like Click to Call, Conferencing Apps and even Webphones. Currently we support WebRTC on Google Chrome, and all other browsers use Flash by default.","logo":"https://new-ui-cms-plivo.s3.amazonaws.com/img/logo-119x36.png","name":"Plivo","links":{"site":"http://plivo.com/docs/sdk/web/"},"tags":["audio","webrtc"]}},{"title":"BeatDetektor.js","url":"/library/beatdetektor-js","id":"beatdetektor-js","library":{"id":"beatdetektor-js","description":"BeatDetektor - CubicFX Visualizer Beat Detection & Analysis Algorithm\n\n\n*  Javascript port by Charles J. Cliffe and Corban Brook","logo":"/images/repo.png","name":"BeatDetektor.js","links":{"site":"https://beatdetektor.svn.sourceforge.net/svnroot/beatdetektor/trunk/core/js/beatdetektor.js"},"tags":[]}},{"title":"annyang","url":"/library/annyang","id":"annyang","library":{"id":"annyang","description":"The leading Speech Recognition library. Lets your visitors control your site with voice commands.\nannyang supports multiple languages, has no dependencies, weighs just 2kb and is free to use.","logo":"https://www.talater.com/annyang/images/icon_speech.png","name":"annyang","links":{"site":"https://www.talater.com/annyang/","github":"https://github.com/TalAter/annyang"},"tags":["audio","speech","speechrecognition","voice"]}},{"title":"SoundManager 2","url":"/library/soundmanager2","id":"soundmanager2","library":{"id":"soundmanager2","description":"A JavaScript Sound API supporting MP3, MPEG4 and HTML5 Audio.\n\nSoundManager 2 makes it easier to play audio using JavaScript.\nUsing HTML5 and Flash, SoundManager 2 provides reliable cross-platform audio under a single JavaScript API.","logo":"http://www.schillmania.com/projects/soundmanager2/demo/_image/soundmanager2-speaker.png","name":"SoundManager 2","links":{"site":"http://www.schillmania.com/projects/soundmanager2/"},"tags":["flash","html5"]}}]