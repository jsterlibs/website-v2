[{"title":"Javascript Finite State Machine","url":"/library/javascript-finite-state-machine","id":"javascript-finite-state-machine","library":{"id":"javascript-finite-state-machine","description":"A finite state machine javascript micro framework","logo":"/images/repo.png","name":"Javascript Finite State Machine","links":{"site":"http://codeincomplete.com/posts/2013/1/26/javascript_state_machine_v2_2_0/","github":"https://github.com/jakesgordon/javascript-state-machine"},"tags":["commercial","statemachine"]}},{"title":"Faker.js","url":"/library/faker-js","id":"faker-js","library":{"id":"faker-js","description":"Generate massive amounts of fake data in Node.js and the browser.","logo":"https://a248.e.akamai.net/camo.github.com/12bb84b409d9e3404f2993993bb79836646411c8/687474703a2f2f696d6775722e636f6d2f4b69696e512e706e67","name":"Faker.js","links":{"github":"https://github.com/Marak/Faker.js"},"tags":[]}},{"title":"Buckets","url":"/library/buckets","id":"buckets","library":{"id":"buckets","description":"A complete, fully tested and documented data structure library written in JavaScript.","logo":"/images/repo.png","name":"Buckets","links":{"github":"https://github.com/mauriciosantos/buckets"},"tags":[]}},{"title":"Chance.js","url":"/library/chance-js","id":"chance-js","library":{"id":"chance-js","description":"Chance is a minimalist generator of random strings, numbers, etc. to help reduce some monotony particularly while writing automated tests.","logo":"http://chancejs.com/logo.png","name":"Chance.js","links":{"site":"http://chancejs.com","github":"https://github.com/victorquinn/chancejs"},"tags":[]}},{"title":"dsjslib","url":"/library/dsjs","id":"dsjs","library":{"id":"dsjs","description":"This is a collection of data structures, implemented in JavaScript. Its written and tested using Node.js but the dependencies are mostly peripheral (e.g util for logging and assert module for testing). So the code can be used in Browser as well with minor changes.","logo":"/images/repo.png","name":"dsjslib","links":{"github":"https://github.com/monmohan/dsjslib"},"tags":[]}},{"title":"mori","url":"/library/mori","id":"mori","library":{"id":"mori","description":"ClojureScript's persistent data structures and supporting API from the comfort of vanilla JavaScript","logo":"https://github-camo.global.ssl.fastly.net/fe75733b967ffcd4742f6eca9cc2c0c2dc69ef3c/687474703a2f2f636c6f75642e6769746875622e636f6d2f646f776e6c6f6164732f7377616e6e6f64657474652f6d6f72692f6d6f72692e706e67","name":"mori","links":{"github":"https://github.com/swannodette/mori"},"tags":[]}},{"title":"HashMap","url":"/library/hashmap","id":"hashmap","library":{"id":"hashmap","description":"This project provides a HashMap class that works both on NodeJS and the browser. HashMap instances store key/value pairs allowing keys of any type.\n\nUnlike regular objects, keys won't not be stringified. For example numbers and strings won't be mixed, you can pass Date's, RegExp's, DOM Elements, anything! (even null and undefined)","logo":"/images/repo.png","name":"HashMap","links":{"github":"https://github.com/flesler/hashmap"},"tags":[]}},{"title":"ES6 Harmony Collections","url":"/library/es6-harmony-collections","id":"es6-harmony-collections","library":{"id":"es6-harmony-collections","description":"The aim of this repository is to provide an unobtrusive, performances oriented shim for ES6 collections such WeakMap, Map, and Set.","logo":"/images/repo.png","name":"ES6 Harmony Collections","links":{"github":"https://github.com/WebReflection/es6-collections"},"tags":[]}},{"title":"k-d Tree JavaScript Library","url":"/library/k-d-tree-javascript-library","id":"k-d-tree-javascript-library","library":{"id":"k-d-tree-javascript-library","description":"A basic but super fast JavaScript implementation of the k-dimensional tree data structure.\n\nIn computer science, a k-d tree (short for k-dimensional tree) is a space-partitioning data structure for organizing points in a k-dimensional space. k-d trees are a useful data structure for several applications, such as searches involving a multidimensional search key (e.g. range searches and nearest neighbor searches). k-d trees are a special case of binary space partitioning trees.","logo":"https://0.gravatar.com/avatar/2ae539d62625c37ce8c3213eb273a04e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-org-420.png","name":"k-d Tree JavaScript Library","links":{"github":"https://github.com/ubilabs/kd-tree-javascript"},"tags":["graph"]}},{"title":"SculeJS","url":"/library/sculejs","id":"sculejs","library":{"id":"sculejs","description":"SculeJS (from Minuscule - pronounced skyul) is a JavaScript library emulating the functionality of MongoDB. It's also much more than that; SculeJS includes implementations of many general purpose data structures that can be used by developers in their day-to-day work.","logo":"/images/repo.png","name":"SculeJS","links":{"github":"https://github.com/dan-eyles/sculejs"},"tags":[]}},{"title":"jParser","url":"/library/jparser","id":"jparser","library":{"id":"jparser","description":"jParser makes it easy to parse binary files in Javascript.","logo":"/images/repo.png","name":"jParser","links":{"site":"http://blog.vjeux.com/2011/javascript/binaryparser-unleash-javascript-power.html","github":"https://github.com/vjeux/jParser"},"tags":[]}},{"title":"Reified","url":"/library/reified","id":"reified","library":{"id":"reified","description":"Binary data mapping for JS: StructTypes, ArrayTypes, NumberTypes. Create views on top of buffers that allow easy conversion to and from binary data.","logo":"/images/repo.png","name":"Reified","links":{"github":"https://github.com/Benvie/reified"},"tags":["npm"]}},{"title":"js-schema","url":"/library/js-schema","id":"js-schema","library":{"id":"js-schema","description":"js-schema is a new way of describing object schemas in JavaScript. It has a clean and simple syntax, and it is capable of serializing to/from the popular JSON Schema format. The typical usecase is decalartive object validation.","logo":"/images/repo.png","name":"js-schema","links":{"site":"https://molnarg.github.com/js-schema/","github":"https://github.com/molnarg/js-schema"},"tags":[]}},{"title":"es6-collections","url":"/library/es6-collections","id":"es6-collections","library":{"id":"es6-collections","description":"The aim of this repository is to provide an unobtrusive, performances oriented shim for ES6 collections such WeakMap, Map, and Set.\n\nThese global functions are already available in Firefox Nightly and Chrome Dev channel through Enable Experimental JavaScript in chrome://flags/ section.","logo":"/images/repo.png","name":"es6-collections","links":{"github":"https://github.com/WebReflection/es6-collections"},"tags":[]}},{"title":"valuejs","url":"/library/valuejs","id":"valuejs","library":{"id":"valuejs","description":"Provides a Value constructor used to create numbers similar to ranges that can be safely modified within specified boundaries.","logo":"/images/repo.png","name":"valuejs","links":{"github":"https://github.com/karolk/valuejs"},"tags":["max","min","range.","step","value"]}},{"title":"simplesets-nodejs","url":"/library/simplesets-nodejs","id":"simplesets-nodejs","library":{"id":"simplesets-nodejs","description":"This provides a set data type, with an API very close to that of Python's sets module.","logo":"/images/repo.png","name":"simplesets-nodejs","links":{"github":"https://github.com/PeterScott/simplesets-nodejs"},"tags":[]}},{"title":"setjs","url":"/library/setjs","id":"setjs","library":{"id":"setjs","description":"setjs implements a a Set API inspired by Python. There are some differences, though. The biggest difference is that the API is immutable by design. There is a basic set structure and functions that operate upon it.","logo":"/images/repo.png","name":"setjs","links":{"github":"https://github.com/bebraw/setjs"},"tags":[]}},{"title":"BloomFilters","url":"/library/bloomfilters","id":"bloomfilters","library":{"id":"bloomfilters","description":"A set of bloom filter implementations in pure coffee/javascipt.","logo":"/images/repo.png","name":"BloomFilters","links":{"github":"https://github.com/dsummersl/bloomfilters"},"tags":["coffeescript"]}},{"title":"jaylist","url":"/library/jaylist","id":"jaylist","library":{"id":"jaylist","description":"a simple wrapper for javascript's built-in hash storage. Much of the functionality was inspired by Python's dictionary","logo":"/images/repo.png","name":"jaylist","links":{"site":"https://benbscholz.github.com/jaylist/","github":"https://github.com/benbscholz/jaylist"},"tags":[]}},{"title":"negative-array","url":"/library/negative-array","id":"negative-array","library":{"id":"negative-array","description":"Negative array index support using ES6 Proxy.\n\nvar a=[1,2,3]; a[-1] //=> 3","logo":"/images/repo.png","name":"negative-array","links":{"site":"http://sindresorhus.com/negative-array","github":"https://github.com/sindresorhus/negative-array"},"tags":["array","bower","component","es6","harmony","index","indice","negative","npm","proxies","proxy","reverse"]}},{"title":"makery.js","url":"/library/makery-js","id":"makery-js","library":{"id":"makery-js","description":"Factory-style (via blueprints) object creation for tests. Inspired by Ruby Machinist.\n\nMakery is a library that allows you to create objects with default values (and possibly overriding those) via the definition of blueprints.\n\nMakery works really well for creating Backbone models, but that is not the only use case. Makery can be used to create any kind of objects from a constructor.","logo":"/images/repo.png","name":"makery.js","links":{"github":"https://github.com/leoasis/makery.js"},"tags":["testing"]}},{"title":"node-trees","url":"/library/node-trees","id":"node-trees","library":{"id":"node-trees","description":"node-trees is a library containing tree data structures. It currently only contains quad-tree, but more will be on the way.","logo":"/images/repo.png","name":"node-trees","links":{"github":"https://github.com/RobertWHurst/node-trees"},"tags":[]}},{"title":"JSONycle","url":"/library/jsonycle","id":"jsonycle","library":{"id":"jsonycle","description":"Allow data structures with circular references to be serialized in to two JSON strings, and be parsed back in to an object complete with circular references","logo":"/images/repo.png","name":"JSONycle","links":{"github":"https://github.com/rhysbrettbowen/JSONycle"},"tags":["circular","json"]}},{"title":"simplejsmap","url":"/library/simplejsmap","id":"simplejsmap","library":{"id":"simplejsmap","description":"A light weight and simple Javascript implementation of maps","logo":"/images/repo.png","name":"simplejsmap","links":{"github":"https://github.com/dadepo/simplejsmap"},"tags":["data","maps"]}},{"title":"ParsedURL","url":"/library/parsedurl","id":"parsedurl","library":{"id":"parsedurl","description":"A JavaScript library for parsing/constructing HTTP/HTTPS URL's.","logo":"/images/repo.png","name":"ParsedURL","links":{"github":"https://github.com/JonAbrams/ParsedURL"},"tags":["url"]}},{"title":"kash","url":"/library/kash","id":"kash","library":{"id":"kash","description":"Fast and efficient in-memory caching for JavaScript.","logo":"/images/repo.png","name":"kash","links":{"github":"https://github.com/matthewhudson/kash"},"tags":["cache","caching","data","memory","ram","storage"]}},{"title":"BoyCook/SetJS","url":"/library/boycook-setjs","id":"boycook-setjs","library":{"id":"boycook-setjs","description":"Set implementation in JavaScript.","logo":"/images/repo.png","name":"BoyCook/SetJS","links":{"github":"https://github.com/BoyCook/SetJS"},"tags":[]}},{"title":"ClassJS","url":"/library/classjs","id":"classjs","library":{"id":"classjs","description":"proper inheritance\noverrides\nvalidations\nstatic/private properties\nserialize/deserialize (RESTfull, localStorage, MongoDB)\ncollections\nBrowser and Node.js","logo":"http://atmajs.com/images/logos/class.png","name":"ClassJS","links":{"site":"http://atmajs.com/class","github":"https://github.com/atmajs/ClassJS"},"tags":[]}},{"title":"InstagramJS","url":"/library/instagramjs","id":"instagramjs","library":{"id":"instagramjs","description":"InstagramJS is a convenience wrapper for the Instagram API","logo":"/images/repo.png","name":"InstagramJS","links":{"github":"https://github.com/positlabs/InstagramJS"},"tags":["Instagram","api","wrapper"]}},{"title":"ShieldUI JavaScript DataSource","url":"/library/shieldui-javascript-datasource","id":"shieldui-javascript-datasource","library":{"id":"shieldui-javascript-datasource","description":"Shield UI DataSource is a versatile data component that aims to simplify data retrieval and manipulation. It provides out-of-the-box binding to various data sources:\n\nJavascript arrays and objects\nJSON web services\nJSONP web services\nXML strings and web services\nHTML table elements\nThrough its flexible configuration, Shield UI DataSource abstracts out heterogenous data retrieval into an intuitive, unified API. It simplifies working with client-side data using JavaScript and enables data sharing across different components on the same HTML page. Shield UI DataSource fully supports paging, sorting and filtering both on the client-side and server-side.","logo":"https://sites.google.com/a/shieldui.com/datavizattachment1/logo.png","name":"ShieldUI JavaScript DataSource","links":{"site":"http://www.shieldui.com"},"tags":["DataSource","Javasript"]}},{"title":"adam","url":"/library/adam","id":"adam","library":{"id":"adam","description":"Functions to create, process and test objects.","logo":"/images/repo.png","name":"adam","links":{"github":"https://github.com/gamtiq/adam"},"tags":["Object","check","create","field","filter","kind","process","size","split","type","value"]}},{"title":"Fast-JSON-Patch","url":"/library/fast-json-patch","id":"fast-json-patch","library":{"id":"fast-json-patch","description":"Fast implementation of JSON-Patch (RFC-6902) with duplex (observe changes) capabilities","logo":"/images/repo.png","name":"Fast-JSON-Patch","links":{"github":"https://github.com/Starcounter-Jack/Fast-JSON-Patch"},"tags":["json","json-patch","observe"]}},{"title":"SoftXpath","url":"/library/softxpath","id":"softxpath","library":{"id":"softxpath","description":"Lightweight cross browser JavaScript library for parsing complex XML documents using powerful Xpath expressions.","logo":"http://www.softxml.com/images/softxml-icon.png","name":"SoftXpath","links":{"site":"http://www.softxml.com/SoftXPathDemo.htm","github":"https://github.com/softxml/SoftXpath"},"tags":["javascript","parsing","xml","xpath"]}},{"title":"JSClass Hash","url":"/library/jsclass-hash","id":"jsclass-hash","library":{"id":"jsclass-hash","description":"A Hash is an unordered collection of key-value pairs. It can be thought of as a table that maps ‘key’ objects (of which there are no duplicates within a Hash) to ‘value’ objects (of which there may be duplicates). This implementation is close to Ruby’s Hash class, though you may be familiar with the data structure in some other form; Java’s HashMap, Python dictionaries, JavaScript objects, PHP’s associative arrays and Scheme’s alists all perform a similar function.","logo":"http://jsclass.jcoglan.com/stylesheets/logo.gif","name":"JSClass Hash","links":{"site":"http://jsclass.jcoglan.com/hash.html"},"tags":[]}},{"title":"js_cols","url":"/library/js-cols","id":"js-cols","library":{"id":"js-cols","description":"jscols is a JavaScript collections library providing implementations of Lists, FIFO queues, LIFO Stacks, Priority Queues, sorted and unsorted Sets and Maps, Bags (Multi Sets) and Multi Maps.\nThe goal of the project is to add functionality to the JavaScript language, similar to that of java.util.Collections (for Java) and the C5 Library (for C#).\nThe Library stands alone and should be easy integratable in all kinds of JavaScript projects. \nEven though the jscols library is independent of other libraries, it integrates especially well with the google closure library, as method names generally correspond to the generic collection operations of goog.structs. This also includes the way goog.structs support closures.","logo":"/images/repo.png","name":"js_cols","links":{"site":"https://code.google.com/p/jscols/"},"tags":[]}},{"title":"jshashtable","url":"/library/jshashtable","id":"jshashtable","library":{"id":"jshashtable","description":"A standalone implementation of hash table in JavaScript. It associates keys with values, and allows any object to be used as the key (unlike JavaScript's built-in Object, which only allows strings as property names).\n\njshashtable requires no libraries and is designed to work in all ECMAScript 3 compliant environments, including all major browsers.","logo":"/images/repo.png","name":"jshashtable","links":{"site":"https://code.google.com/p/jshashtable/"},"tags":[]}},{"title":"Queue.js","url":"/library/queue-js","id":"queue-js","library":{"id":"queue-js","description":"Queue.js is a simple and efficient queue implementation for JavaScript whose dequeue function runs in amortised constant time. As a result, for larger queues it can be significantly faster than using arrays.","logo":"/images/repo.png","name":"Queue.js","links":{"site":"http://code.stephenmorley.org/javascript/queues/"},"tags":[]}},{"title":"mobservable","url":"/library/mobservable","id":"mobservable","library":{"id":"mobservable","description":"Unobtrusive library to create reactive data structures and self-updating view functions\n\nMobservable ensures that all the changes in your data structures are propagated automatically, atomically and synchronously to all view functions that use your data. Mobservable also ships with a React mixin to create components that automatically refresh themselves.","logo":"https://mweststrate.github.io/mobservable/images/mobservable.png","name":"mobservable","links":{"site":"https://mweststrate.github.io/mobservable","github":"https://github.com/mweststrate/mobservable"},"tags":["observable","reactive","reactjs"]}},{"title":"NewickJS","url":"/library/newickjs","id":"newickjs","library":{"id":"newickjs","description":"JavaScript library for parsing and working with the Newick format.","logo":"http://tribunsky.com/img/newick_logo.png","name":"NewickJS","links":{"site":"http://tribunsky.com","github":"https://github.com/octav47/NewickJS"},"tags":["JS","newick","parser","tree"]}},{"title":"simple-jsonrpc-js","url":"/library/simple-jsonrpc-js","id":"simple-jsonrpc-js","library":{"id":"simple-jsonrpc-js","description":"Generate and parse json rpc messages\n\nClient and server.\nOn websocket and http.\nFull support json-rpc specification 2.0","logo":"/images/repo.png","name":"simple-jsonrpc-js","links":{"site":"https://github.com/jershell/simple-jsonrpc-js","github":"https://github.com/jershell/simple-jsonrpc-js"},"tags":["api","client-side","json","jsonrpc","rpc","websocket"]}}]