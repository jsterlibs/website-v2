[{"title":"Queen","url":"/library/queen","id":"queen","library":{"id":"queen","description":"Queen is a server which is capable of brokering socketed communication between browsers which are connected to it and other applications or scripts. You can think of the Queen Server as a pool of browsers which you can execute code on. Taking the abstraction further, you can think of Queen Server as distributed execution platform using browsers as computation nodes.","logo":"http://queenjs.com/resources/queen-bee.png","name":"Queen","links":{"site":"http://queenjs.com","github":"https://github.com/turn/queen"},"tags":["nodejs","test"]}},{"title":"unit.js","url":"/library/unit-js","id":"unit-js","library":{"id":"unit-js","description":"Unit.js is an unit testing framework for Javascript and Node.js.\n\nSeveral assertions styles (unit.js, should.js, must.js, assert, spec, ...).\n\nUnit.js is capable of testing the Node.js modules, Express.js applications, requests and it provides the great features (spies, stubs, mocks, ...). \n\nWorks standalone or with any unit testing framework (Mocha, Jasmine, ...).\n\nAll assertions are documented and and have examples.","logo":"http://unitjs.com/assets/img/unitjs.png","name":"unit.js","links":{"site":"http://unitjs.com","github":"https://github.com/unitjs/unit.js"},"tags":["mock","node.js","spy","stub","test","unit"]}},{"title":"jsPerf","url":"/library/jsperf","id":"jsperf","library":{"id":"jsperf","description":"jsPerf aims to provide an easy way to create and share test cases, comparing the performance of different JavaScript snippets by running benchmarks.","logo":"/images/repo.png","name":"jsPerf","links":{"site":"https://jsperf.com/"},"tags":["perfomance","test"]}}]