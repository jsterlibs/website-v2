[{"title":"Babylon.js","url":"/library/babylon-js","id":"babylon-js","library":{"id":"babylon-js","description":"Babylon.js: a complete JavaScript framework for building 3D games with HTML 5 and WebGL.","logo":"http://www.babylonjs.com/Assets/Logo.png","name":"Babylon.js","links":{"github":"https://github.com/BabylonJS/Babylon.js"},"tags":["webgl"]}},{"title":"TSM","url":"/library/tsm-a-typescript-vector-and-matrix-math-library","id":"tsm-a-typescript-vector-and-matrix-math-library","library":{"id":"tsm-a-typescript-vector-and-matrix-math-library","description":"TSM is a a collection of vector and matrix classes written in Microsoft's new JavaScript superset TypeScript, which compiles to plain JavaScript.","logo":"/images/repo.png","name":"TSM","links":{"github":"https://github.com/vexator/TSM"},"tags":["graphics","math","matrix","quaternion","typescript","vector","webgl"]}},{"title":"Proton","url":"/library/proton","id":"proton","library":{"id":"proton","description":"Proton is a html5 particle engine.It include canvas,dom,webgl,easel and pixel five kinds of renderer.Of course you can customize your own renderer,it is very easy!\nyou can vist site : http://a-jie.github.io/Proton/ or http://www.a-jie.cn/proton/","logo":"/images/repo.png","name":"Proton","links":{"site":"https://a-jie.github.io/Proton/","github":"https://github.com/a-jie/Proton"},"tags":["html5","particle","webgl"]}},{"title":"PlayCanvas","url":"/library/playcanvas","id":"playcanvas","library":{"id":"playcanvas","description":"Cloud-based 3D HTML5 engine and toolset. Full JS engine, real-time collaborative designer tools. Support for 3D art packages.","logo":"https://s3.amazonaws.com/photos.angel.co/startups/i/120160-541e04926e9a5da9c136ab3e7caa5d44-medium_jpg.jpg?buster=1346927999","name":"PlayCanvas","links":{"site":"http://playcanvas.com/"},"tags":["3d","audio","canvas","commercial","html5","webgl"]}},{"title":"Neft","url":"/library/neft","id":"neft","library":{"id":"neft","description":"Neft is an Open Source JavaScript Framework made for server-browser-native applications. Neft.io is easy-to-use, fast and feature-focused.\n\nSupported platforms: Node, Browsers (HTML5 / WebGL), iOS and Android.\n\nNeft guarantees the same code across platforms.","logo":"https://camo.githubusercontent.com/b41f965b1a38a58e89c4082cc2493374d35c7e04/687474703a2f2f7777772e6e6566742e696f2f7374617469632f696d616765732f6e6566742d77686974652e737667","name":"Neft","links":{"site":"http://www.neft.io","github":"https://github.com/Neft-io/neft-cli"},"tags":["Node","android","html5","ios","native","webgl"]}},{"title":"WebGLU","url":"/library/webglu","id":"webglu","library":{"id":"webglu","description":"WebGLU is both a set of low-level utilities and a high-level\nengine for developing WebGL based applications. \n\nWebGLU is designed such that a developer can focus on the \nend result with a minimum of fuss and code, but doesn't hand\nhold developers who want more control. This is achieved by \nexposing the raw GL object and also many lower-level \nfunctions for working with it and the WebGL API.","logo":"/images/repo.png","name":"WebGLU","links":{"site":"https://bjartr.blogspot.com","github":"https://github.com/OneGeek/WebGLU"},"tags":["3d","shaders","webgl"]}},{"title":"VivaGraphJS","url":"/library/vivagraphjs","id":"vivagraphjs","library":{"id":"vivagraphjs","description":"VivaGraphJS is a free graph drawing library for JavaScript. It is designed to be extensible and to support different rendering engines and layout algorithms. At the moment it supports rendering graphs using WebGL, SVG or CSS formats.","logo":"/images/repo.png","name":"VivaGraphJS","links":{"github":"https://github.com/anvaka/VivaGraphJS"},"tags":["graphs","svg","webgl"]}},{"title":"PlayN","url":"/library/playn","id":"playn","library":{"id":"playn","description":"PlayN\nis a cross-platform game abstraction library for writing games that compile to:\n\nDesktop Java\nHTML5 Browsers\nAndroid\niOS\nFlash","logo":"https://code.google.com/p/playn/logo?cct=1337812194","name":"PlayN","links":{"site":"https://code.google.com/p/playn/","github":"https://github.com/Just-/playn"},"tags":["android","canvas","jvm","webgl"]}},{"title":"Turbulenz","url":"/library/turbulenz","id":"turbulenz","library":{"id":"turbulenz","description":"Turbulenz offers the ability to build, publish and monetise high-quality games that react like no others, with immersive 2D and 3D effects and real-time physics that open up a whole new world of unprecedented and extraordinary web content.","logo":"https://0.gravatar.com/avatar/c3a7876e11bac6d876826a9adf922118?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-org-420.png","name":"Turbulenz","links":{"site":"http://turbulenz.com","github":"https://github.com/turbulenz/turbulenz_engine"},"tags":["2d","3d","audio","canvas","collisions","commercial","html5","networking","physics","webaudio","webgl","websockets"]}},{"title":"BLACKCELL.js","url":"/library/blackcell-js-modern-js-friendly-for-webgl","id":"blackcell-js-modern-js-friendly-for-webgl","library":{"id":"blackcell-js-modern-js-friendly-for-webgl","description":"BLACKCELL.js - modern, JS-friendly API for WebGL.\n\nThe project's aim is to give an expressive tool for rapid prototyping and publishing complex rendering techniques. It's ideal for 3D-projects which require low-level API features and commonly used implementation at the same time.\n\nThe features:\n\n\nLinear algebra (vectors, rotations, transformations) and geometry  primitives\nStaging graphics core (designed for custom rendering pipelines and shaders)\nCommon implementations (frustum culling, attributes & uniforms binding,  context lost handling, etc)\nWebGL Extensions supported / WebGL 2.0 oriented architecture","logo":"http://blackcelljs.com/layout/logo.png","name":"BLACKCELL.js","links":{"site":"http://blackcelljs.com","github":"https://github.com/vsergey3d/blackcell"},"tags":["webgl"]}},{"title":"BabylonJS","url":"/library/babylonjs","id":"babylonjs","library":{"id":"babylonjs","description":"Babylon.js: a complete JavaScript framework for building 3D games with HTML 5 and WebGL","logo":"https://identicons.github.com/5a4017110ce44506de1b1fb353eb7a0d.png","name":"BabylonJS","links":{"site":"http://www.babylonjs.com","github":"https://github.com/BabylonJS/Babylon.js"},"tags":["webgl"]}},{"title":"three.proton","url":"/library/three-proton","id":"three-proton","library":{"id":"three-proton","description":"three.proton is a magical 3d particle engine using three.js. It is based on the Proton Engine library. It inherited Proton's most Api, and it was very, very easy to use.\nI think it is the simplest three.js particle engine.Check out examples at https://a-jie.github.io/three.proton/","logo":"/images/repo.png","name":"three.proton","links":{"site":"https://a-jie.github.io/three.proton/","github":"https://github.com/a-jie/three.proton"},"tags":["particle","three.js","threejs","webgl"]}},{"title":"Metrix.js","url":"/library/metrix-js","id":"metrix-js","library":{"id":"metrix-js","description":"A simple library with an entity and collision system to quickly create 3D WebGL games with three.js.","logo":"http://psych.gs/public_html/Metrix.png","name":"Metrix.js","links":{"site":"http://psych.gs/public_html/metrix.html"},"tags":["3d","webgl"]}},{"title":"Game Develop","url":"/library/game-develop","id":"game-develop","library":{"id":"game-develop","description":"Game creator software that can export HTML5 or native games.\nNo programming skills is required: Anyone can create a game using Game Develop thanks to the intuitive events system used to build all the game logic.","logo":"http://compilgames.net/images/GameDevelop/logoG.png","name":"Game Develop","links":{"site":"http://www.compilgames.net","github":"https://github.com/4ian/GDJS"},"tags":["2d","canvas","game","webgl"]}}]