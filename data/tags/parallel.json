[{"title":"MonkeyBars","url":"/library/monkeybars","id":"monkeybars","library":{"id":"monkeybars","description":"A task based library that provides a simple structure for handling singular, sequential and parallel units of code.\n\nThe overall architecture is based off of the composite and decorator patterns. These patterns lend themselves very well to a task based library, where tasks can contain other tasks all contributing to the overall flow of an operation.\n\nThis library also makes it possible to run tasks concurrrently with help of HTML5 WebWorkers and Blobs.\n\nThe library itself has no hard ties to the browser, and because of this it works both in client-side and server-side javascript projects.\n\nIndividual tasks are highly extendable and can be extended to form all sorts of interesting processes.","logo":"/images/repo.png","name":"MonkeyBars","links":{"site":"https://mcgaryes.github.com/monkeybars/","github":"https://github.com/mcgaryes/monkeybars"},"tags":["commercial","parallel","sequence","task"]}},{"title":"Catiline","url":"/library/communist","id":"communist","library":{"id":"communist","description":"Library all about web workers. Simplifies making and using web workers to parallelize code with an easy promise based syntax.(formally Communist same library but now your boss won't judge you)","logo":"https://calvinmetcalf.github.io/catiline/website/apple-touch-icon-144x144-precomposed.png","name":"Catiline","links":{"site":"http://catilinejs.com/","github":"https://github.com/calvinmetcalf/catiline"},"tags":["parallel","worker"]}}]