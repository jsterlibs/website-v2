[{"title":"Raptor Templates","url":"/library/raptor-templates","id":"raptor-templates","library":{"id":"raptor-templates","description":"Raptor Templates is an extensible, streaming, asynchronous, high performance, HTML-based templating language that can be used in Node.js or in the browser. Raptor Templates was founded on the philosophy that an HTML-based templating language is more natural and intuitive for generating HTML. Because the Raptor Templates compiler understands the structure of the HTML document, the directives in template files are less obtrusive and more powerful. In addition, Raptor Templates allows you to introduce your own custom tags and custom attributes to extend the HTML grammar.","logo":"https://raw.githubusercontent.com/raptorjs/branding/master/raptorjs-logo-square.png","name":"Raptor Templates","links":{"github":"https://github.com/raptorjs3/raptor-templates"},"tags":["asynchronous","custom-tags","html","non-commerce","streaming"]}},{"title":"Web Atoms JS","url":"/library/web-atoms-js","id":"web-atoms-js","library":{"id":"web-atoms-js","description":"JavaScripting is tedious, managing JavaScripts is even bigger pain, introducing Web Atoms, component oriented development for web for programmers with Java, Flex and Silverlight background, they can learn concepts of Dynamic Templates, Hierarchical Scope and Bindings in as little as 24 hours and start creating enterprise grade apps that run on TV, Tablets, Mobile and of course Browser.\n\nWith very little learning curve, it is easy to migrate enterprise apps from Flex/Java to HTML without learning complex JavaScript and unlimited number of libraries with extremely difficult syntax. Web Atoms runs on more configuration in XML type of Markup than code.","logo":"http://webatomsjs.neurospeech.com/images/webatomslogo.png","name":"Web Atoms JS","links":{"site":"http://webatomsjs.neurospeech.com"},"tags":["controls","html","javascript","non-commerce","ui"]}},{"title":"$.t.js","url":"/library/t-js-1","id":"t-js-1","library":{"id":"t-js-1","description":"$.Typewriter w/ nice features like HTML support; also, can mistype, repeat, insert, delete, pause, delay and 'human-like'.","logo":"http://mn.tn/dev/t.js/t.js.1.png","name":"$.t.js","links":{"site":"http://mn.tn/t","github":"https://github.com/mntn-dev/t.js"},"tags":["advanced","html","jquery","text","typewriter"]}},{"title":"Jodit Editor","url":"/library/jodit-editor","id":"jodit-editor","library":{"id":"jodit-editor","description":"A beautiful and functional WYSIWYG HTML text editor with file browser out-of-box","logo":"http://xdsoft.net/jodit/logo@2x.png","name":"Jodit Editor","links":{"site":"http://xdsoft.net/jodit/","github":"https://github.com/xdan/jodit"},"tags":["WYSIWYG","editor","html","rich","text"]}},{"title":"Gem.js","url":"/library/gem-js","id":"gem-js","library":{"id":"gem-js","description":"Gem.js is a view library - a system for building modular and composable web components and styles, as well as a set of extensible web components for building visual user interfaces and styling web applications in pure-javascript.","logo":"https://raw.githubusercontent.com/Tixit/Gem.js/master/gem.png","name":"Gem.js","links":{"github":"https://github.com/Tixit/Gem.js"},"tags":["angular","application","backbone","blocks","components","css","html","react","style","view","web"]}},{"title":"Custom Elements","url":"/library/custom-elements","id":"custom-elements","library":{"id":"custom-elements","description":"Custom elements are a part of the W3C Web Components specification http://w3c.github.io/webcomponents/spec/custom/. They allow you to define and register new HTML tags/elements in your documents. You can then use these tags as regular HTML.\n\nThis library polyfills the Custom Elements API on browsers today. It is a barebones fork of the X-Tag core library from Mozilla http://www.x-tags.org/. X-Tags in turn uses the Polymer polyfills from Google http://www.polymer-project.org/.\n\nThe aim of this library is to provide a stripped down version of the above polyfills, with zero additional weight.","logo":"https://www.dartlang.org/articles/web-ui/webcomponent_logo.jpg","name":"Custom Elements","links":{"github":"https://github.com/oliver-moran/custom-elements"},"tags":["Custom","Elements","components","html","web"]}},{"title":"srcset","url":"/library/srcset","id":"srcset","library":{"id":"srcset","description":"Parse and stringify the HTML  srcset attribute.","logo":"/images/repo.png","name":"srcset","links":{"site":"http://sindresorhus.com","github":"https://github.com/sindresorhus/srcset"},"tags":["attribute","bower","component","html","image","img","npm","parse","src","stringify"]}},{"title":"text-clipper","url":"/library/text-clipper","id":"text-clipper","library":{"id":"text-clipper","description":"Fast and correct clip functions for HTML and plain text","logo":"/images/repo.png","name":"text-clipper","links":{"site":"https://github.com/arendjr/text-clipper","github":"https://github.com/arendjr/text-clipper"},"tags":["clip","html","string","text","trim","truncate"]}},{"title":"DrawWindow","url":"/library/drawwindow","id":"drawwindow","library":{"id":"drawwindow","description":"A Javascript implementation for canvas.drawWindow.","logo":"/images/repo.png","name":"DrawWindow","links":{"site":"https://bgrins.github.com/DrawWindow/","github":"https://github.com/bgrins/DrawWindow"},"tags":["canvas","html"]}}]