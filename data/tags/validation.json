[{"title":"Semtex UI","url":"/library/semtex-ui","id":"semtex-ui","library":{"id":"semtex-ui","description":"Modern UI framework with 18 (and growing) components for developing rich browser applications with JavaScript, HTML5 and CSS3.","logo":"/images/repo.png","name":"Semtex UI","links":{"site":"http://semtex.wemakesites.net/"},"tags":["ajax","commercial","forms","localstorage","popup","tabs","validation"]}},{"title":"Parsley.js","url":"/library/parsley-js","id":"parsley-js","library":{"id":"parsley-js","description":"Javascript forms validation. Never write a single javascript line anymore to validate your forms FrontEnd. Parsley will do that for you and do it right, thanks to its powerful DOM-API.","logo":"/images/repo.png","name":"Parsley.js","links":{"site":"http://parsleyjs.org","github":"https://github.com/guillaumepotier/Parsley.js"},"tags":["validation"]}},{"title":"Breeze.js","url":"/library/breeze-js","id":"breeze-js","library":{"id":"breeze-js","description":"Breeze helps with tough client-side data management chores such as free-form query and save of complex model object graphs (Customer.Order.OrderDetails.Product), tracking changes, data binding, model validation, and serializing object graphs for offline scenarios.","logo":"http://www.breezejs.com/sites/all/themes/breeze/images/breezelogo.png","name":"Breeze.js","links":{"site":"http://www.breezejs.com/","github":"https://github.com/IdeaBlade/Breeze"},"tags":["data","entity","offline","validation"]}},{"title":"FieldVal","url":"/library/fieldval","id":"fieldval","library":{"id":"fieldval","description":"JavaScript validation library that produces structured errors, supports both sync and async validation as well as contains all common validation functions (email, url etc.). It is fully customisable and has wide range of applications (see examples: http://www.fieldval.com/docs/fieldval/Examples).\n\nDocumentation: http://www.fieldval.com/docs/fieldval\n\nBlog posts on the library:\nhttp://www.minoblog.io/fieldval/\nhttp://www.minoblog.io/mostapierrors_suck/","logo":"/images/repo.png","name":"FieldVal","links":{"site":"http://www.fieldval.com/","github":"https://github.com/FieldVal/fieldval-js"},"tags":["backend","forms","frontend","validation"]}},{"title":"Masked Input Plugin","url":"/library/masked-input-plugin","id":"masked-input-plugin","library":{"id":"masked-input-plugin","description":"This is a masked input plugin for the jQuery javascript library. It allows a user to more easily enter fixed width input where you would like them to enter the data in a certain format (dates,phone numbers, etc). It has been tested on Internet Explorer, Firefox, Safari, Opera, and Chrome. A mask is defined by a format made up of mask literals and mask definitions. Any character not in the definitions list below is considered a mask literal. Mask literals will be automatically entered for the user as they type and will not be able to be removed by the user.","logo":"/images/repo.png","name":"Masked Input Plugin","links":{"site":"http://digitalbush.com/projects/masked-input-plugin/","github":"https://github.com/digitalBush/jquery.maskedinput"},"tags":["validation"]}}]