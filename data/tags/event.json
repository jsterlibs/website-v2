[{"title":"observe","url":"/library/observe","id":"observe","library":{"id":"observe","description":"The object-observer pattern in javascript. Listen to changes that happen on your deep objects and arrays.","logo":"/images/repo.png","name":"observe","links":{"site":"https://github.com/Tixit/observe","github":"https://github.com/Tixit/observe"},"tags":["MVC","MutationObserver","binding","data","event","events","observe","observer","pattern","publish","pubsub","reactive","subscribe"]}},{"title":"postal.js","url":"/library/postal-js","id":"postal-js","library":{"id":"postal-js","description":"Postal.js is an in-memory message bus - very loosely inspired by AMQP - written in JavaScript. Postal.js runs in the browser, or on the server-side using Node.js. It takes the familiar \"eventing-style\" paradigm (of which most JavaScript developers are familiar) and extends it by providing \"broker\" and subscriber implementations which are more sophisticated than what you typically find in simple event delegation.","logo":"https://0.gravatar.com/avatar/d41d8cd98f00b204e9800998ecf8427e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-org-420.png","name":"postal.js","links":{"site":"http://freshbrewedcode.com/jimcowart","github":"https://github.com/postaljs/postal.js"},"tags":["aggregator","bus","event","messaging"]}},{"title":"capo","url":"/library/capo","id":"capo","library":{"id":"capo","description":"Capo is a module that serves for managing event-driven js architectures and encourages mediator pattern usage solving its biggest weakness - uncertainty of event triggers and listeners.\nIt creates report containing triggers and subscriptions of events.","logo":"https://github.com/msemenistyi/capo/raw/master/images/capo-logo.png","name":"capo","links":{"github":"https://github.com/msemenistyi/capo"},"tags":["event","events","mediator","subscriptions"]}}]