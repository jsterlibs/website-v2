[{"title":"three.js","url":"/library/three-js","id":"three-js","library":{"id":"three-js","description":"JavaScript 3D library\n\nThe aim of the project is to create a lightweight 3D library with a very low level of complexity — in other words, for dummies. The library provides ,  and WebGL renderers.","logo":"/images/repo.png","name":"three.js","links":{"site":"http://threejs.org/","github":"https://github.com/mrdoob/three.js"},"tags":[]}},{"title":"glMatrix","url":"/library/glmatrix","id":"glmatrix","library":{"id":"glmatrix","description":"Javascript Matrix and Vector library for High Performance WebGL apps","logo":"/images/repo.png","name":"glMatrix","links":{"site":"http://glmatrix.net","github":"https://github.com/toji/gl-matrix/"},"tags":["matrix"]}},{"title":"csg.js","url":"/library/csg-js","id":"csg-js","library":{"id":"csg-js","description":"Constructive Solid Geometry (CSG) is a modeling technique that uses Boolean operations like union and intersection to combine 3D solids. This library implements CSG operations on meshes elegantly and concisely using BSP trees, and is meant to serve as an easily understandable implementation of the algorithm. All edge cases involving overlapping coplanar polygons in both solids are correctly handled.","logo":"/images/repo.png","name":"csg.js","links":{"site":"https://evanw.github.com/csg.js/","github":"https://github.com/evanw/csg.js/"},"tags":[]}},{"title":"lightgl.js","url":"/library/lightgl-js","id":"lightgl-js","library":{"id":"lightgl-js","description":"This library makes it easier to quickly prototype WebGL applications. It's lower level than many other WebGL libraries and while it doesn't provide a scene graph, it re-implements OpenGL's modelview/projection matrix stack to provide similar functionality. It also re-introduces some built-in uniforms from GLSL (such as glVertex and glModelViewProjectionMatrix) and OpenGL's immediate mode.","logo":"/images/repo.png","name":"lightgl.js","links":{"github":"https://github.com/evanw/lightgl.js"},"tags":["3d"]}},{"title":"PhiloGL","url":"/library/philogl","id":"philogl","library":{"id":"philogl","description":"PhiloGL is a WebGL Framework for Data Visualization, Creative Coding and Game Development.","logo":"http://www.senchalabs.org/philogl/img/philo_logo.png","name":"PhiloGL","links":{"site":"https://senchalabs.github.com/philogl/","github":"https://github.com/senchalabs/philogl"},"tags":["3d","sencha"]}},{"title":"BabylonJS","url":"/library/babylonjs","id":"babylonjs","library":{"id":"babylonjs","description":"Babylon.js: a complete JavaScript framework for building 3D games with HTML 5 and WebGL","logo":"https://identicons.github.com/5a4017110ce44506de1b1fb353eb7a0d.png","name":"BabylonJS","links":{"site":"http://www.babylonjs.com","github":"https://github.com/BabylonJS/Babylon.js"},"tags":["webgl"]}},{"title":"SceneJS","url":"/library/scenejs","id":"scenejs","library":{"id":"scenejs","description":"SceneJS is an open-source 3D engine for JavaScript which provides a JSON-based scene graph API on WebGL. SceneJS specialises in efficient rendering of large numbers of individually pickable and articulated objects as required by high-detail model-viewing applications in engineering and medicine.","logo":"/images/repo.png","name":"SceneJS","links":{"site":"http://scenejs.org","github":"https://github.com/xeolabs/scenejs"},"tags":["3d"]}},{"title":"CubicVR.js","url":"/library/cubicvr-js","id":"cubicvr-js","library":{"id":"cubicvr-js","description":"Javascript Port of the CubicVR 3D Engine by Charles J. Cliffe","logo":"http://www.cubicvr.org/images/cubic_logo1_new3.png","name":"CubicVR.js","links":{"site":"http://www.cubicvr.org/","github":"https://github.com/cjcliffe/CubicVR.js/"},"tags":["3d"]}},{"title":"webgl-2d","url":"/library/webgl-2d","id":"webgl-2d","library":{"id":"webgl-2d","description":"This project aims to be a complete port of the Canvas2D API implemented in a WebGL context. WebGL-2D is a proof of concept and attempts to ascertain performance improvements over Canvas2D. It should allow most Canvas2D applications to be switched to a WebGL context.","logo":"https://0.gravatar.com/avatar/3318578422e81b68ca6f3589300e67e3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-org-420.png","name":"webgl-2d","links":{"site":"http://weare.buildingsky.net","github":"https://github.com/gameclosure/webgl-2d"},"tags":["2d"]}},{"title":"J3D","url":"/library/j3d","id":"j3d","library":{"id":"j3d","description":"J3D is a playground rather than a production environment. It consists of a Javascript rendering engine and a C#/Unity3d scene exporter.","logo":"/images/repo.png","name":"J3D","links":{"site":"http://www.everyday3d.com/j3d/","github":"https://github.com/drojdjou/J3D"},"tags":[]}},{"title":"GLOW GL","url":"/library/i-am-glow","id":"i-am-glow","library":{"id":"i-am-glow","description":"We’re really proud to introduce GLOW – a WebGL wrapper. GLOW is for you who have some WebGL experience and would like to get to the core – shaders. Please try out GLOW for experimenting with shaders, to create your custom render pipe or make a WebGL demo. Please fork here.","logo":"/images/repo.png","name":"GLOW GL","links":{"site":"http://i-am-glow.com","github":"https://github.com/empaempa/glow"},"tags":["shaders"]}},{"title":"WebGLU","url":"/library/webglu","id":"webglu","library":{"id":"webglu","description":"WebGLU is both a set of low-level utilities and a high-level\nengine for developing WebGL based applications. \n\nWebGLU is designed such that a developer can focus on the \nend result with a minimum of fuss and code, but doesn't hand\nhold developers who want more control. This is achieved by \nexposing the raw GL object and also many lower-level \nfunctions for working with it and the WebGL API.","logo":"/images/repo.png","name":"WebGLU","links":{"site":"https://bjartr.blogspot.com","github":"https://github.com/OneGeek/WebGLU"},"tags":["3d","shaders","webgl"]}},{"title":"OSG.JS","url":"/library/osg-js","id":"osg-js","library":{"id":"osg-js","description":"OSGJS is a WebGL framework based on OpenSceneGraph concepts. It allows an individual to use an “OpenSceneGraph-like” toolbox to interact with WebGL via JavaScript, and provides facilities for exporting various assets to the osgjs format. The API is kept as similar to OpenSceneGraph as possible, providing a familiar environment to veterans of the library and introducing newcomers to a popular and heavily-scrutinized set of interfaces.","logo":"/images/repo.png","name":"OSG.JS","links":{"site":"http://osgjs.org","github":"https://github.com/cedricpinson/osgjs"},"tags":[]}},{"title":"C3DL","url":"/library/c3dl","id":"c3dl","library":{"id":"c3dl","description":"The Canvas 3D JS Libary (C3DL) is a JavaScript library that will make it easier to write 3D applications using WebGL. It provides a set of math, scene, and 3d object classes that makes WebGL more accessible for developers that want to develop 3D content in browser but do not want to have to deal in depth with the 3D math needed to make it work.","logo":"http://www.c3dl.org/wp-content/themes/c3dl4/images/headers/header.png","name":"C3DL","links":{"site":"http://www.c3dl.org","github":"https://github.com/cathyatseneca/c3dl"},"tags":["3d"]}},{"title":"node-webcl","url":"/library/node-webcl","id":"node-webcl","library":{"id":"node-webcl","description":"This is an implementation of Khronos WebCL specification using NodeJS. This implementation solely relies on OpenCL 1.1 C headers.","logo":"https://0.gravatar.com/avatar/1b77945305c5acfcc9487151787fb2c3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-org-420.png","name":"node-webcl","links":{"github":"https://github.com/Motorola-Mobility/node-webcl"},"tags":["WebCL"]}},{"title":"SpiderGL","url":"/library/spidergl","id":"spidergl","library":{"id":"spidergl","description":"3D Graphics for Next-Generation WWW","logo":"http://vcg.isti.cnr.it/software/spidergl.png","name":"SpiderGL","links":{"github":"https://github.com/dibenedetto/SpiderGL"},"tags":["3d"]}},{"title":"WhitestormJS","url":"/library/whitestormjs","id":"whitestormjs","library":{"id":"whitestormjs","description":"WhitestormJS is a framework for 3D web apps built with Three.js technology.\n\nIt implements a core with component system and plugin support for fast development of 3D scene with physics.\n\nAutomizing your web app with whitestorm is fast and comfortable. This engine has physics support implemented by custom Physi.js library, which is much faster than others. Framework provides extended component control and high frame rate, because it uses WebWorkers technology for multithreading.","logo":"https://raw.githubusercontent.com/WhitestormJS/whitestorm.js/master/media/art/logo/default.png","name":"WhitestormJS","links":{"site":"http://whitestormjs.xyz/","github":"https://github.com/WhitestormJS/whitestormjs"},"tags":["3d","games","html5","physijs","threejs","whitestormjs"]}},{"title":"Curve3D","url":"/library/curve3d","id":"curve3d","library":{"id":"curve3d","description":"Curve3D is an open-source cross-browser 3D engine written in pure javascript. It works in all major current browsers (Firefox 3.6+, IE8+, Chrome 5+, Opera 10.5+). Curve3D includes a high performance math library, significantly faster than other javascript matrix math libraries currently available.","logo":"/images/repo.png","name":"Curve3D","links":{"site":"http://www.curve3d.com/","github":"https://github.com/sunetos/curve3d"},"tags":["3d"]}},{"title":"GLGE","url":"/library/glge","id":"glge","library":{"id":"glge","description":"GLGE is a javascript library intended to ease the use of WebGL; which is basically a native browser javascript API giving direct access to openGL ES2, allowing for the use of hardware accelerated 2D/3D applications without having to download any plugins.\n\nThe aim of GLGE is to mask the involved nature of WebGL from the web developer, who can then spend his/her time creating richer content for the web.","logo":"http://www.churchofrabbit.com/wp-content/posts/glge.png","name":"GLGE","links":{"site":"http://www.glge.org/"},"tags":["3d"]}},{"title":"BLACKCELL.js","url":"/library/blackcell-js-modern-js-friendly-for-webgl","id":"blackcell-js-modern-js-friendly-for-webgl","library":{"id":"blackcell-js-modern-js-friendly-for-webgl","description":"BLACKCELL.js - modern, JS-friendly API for WebGL.\n\nThe project's aim is to give an expressive tool for rapid prototyping and publishing complex rendering techniques. It's ideal for 3D-projects which require low-level API features and commonly used implementation at the same time.\n\nThe features:\n\n\nLinear algebra (vectors, rotations, transformations) and geometry  primitives\nStaging graphics core (designed for custom rendering pipelines and shaders)\nCommon implementations (frustum culling, attributes & uniforms binding,  context lost handling, etc)\nWebGL Extensions supported / WebGL 2.0 oriented architecture","logo":"http://blackcelljs.com/layout/logo.png","name":"BLACKCELL.js","links":{"site":"http://blackcelljs.com","github":"https://github.com/vsergey3d/blackcell"},"tags":["webgl"]}},{"title":"CopperLicht","url":"/library/copperlicht","id":"copperlicht","library":{"id":"copperlicht","description":"CopperLicht is a WebGL library and JavaScript 3D engine for creating games and 3d applications in the web browser. CopperLicht comes with a full 3D editor and supports all features necessary to create full 3d games in the browser. Unlike other WebGL 3D Engines, CopperLicht compiles your 3D meshes into a small, binary file which downloads quickly, reducing bandwith usage for your users.","logo":"/images/repo.png","name":"CopperLicht","links":{"site":"http://www.ambiera.com/copperlicht/"},"tags":[]}}]