[{"title":"Lava.ClassManager","url":"/library/lava-classmanager","id":"lava-classmanager","library":{"id":"lava-classmanager","description":"Standalone version of Lava.ClassManager - one of the fastest and most convenient class systems in the world.\n\nPerformance comparison of the fastest class systems:\n\n\nOverridden method calls: http://jsperf.com/js-inheritance-method-calls/2\nObject construction: http://jsperf.com/js-inheritance-object-construction\n\n\nQuick facts:\n\n\nSpeed is comparable to native hand-written classes\nPowerful features like run-time prototype patching and shared members\nClasses can be generated on server and in browser\nSupports multiple inheritance\n\n\nREADME in GitHub repository contains links to reference and tutorials.","logo":"http://www.lava-framework.com/www/export/logo90x90.png","name":"Lava.ClassManager","links":{"github":"https://github.com/kogarashisan/ClassManager"},"tags":["inheritance"]}},{"title":"newClass","url":"/library/newclass","id":"newclass","library":{"id":"newclass","description":"Provides class like programming to JavaScript while staying close to prototypal inheritance.","logo":"/images/repo.png","name":"newClass","links":{"github":"https://github.com/edwinm/newClass"},"tags":["OOP","Object","Oriented","inheritance","prototypal","prototype"]}},{"title":"zoe.js","url":"/library/zoe-js","id":"zoe-js","library":{"id":"zoe-js","description":"zoe.js developed out of a need to manage the inheritance of objects and widgets with and without prototypal inheritance. Many JavaScript inheritance systems mimic classical inheritance systems, while the approach taken here is to create an inheritance model that naturally works with JavaScript objects using extension.","logo":"http://zoejs.org/zoejs.org/page/zoe-logo.png","name":"zoe.js","links":{"github":"https://github.com/zestjs/zoe"},"tags":["OO","inheritance"]}},{"title":"LiquidLava","url":"/library/liquidlava","id":"liquidlava","library":{"id":"liquidlava","description":"LiquidLava is a framework for building user interfaces, which scale from simple interactive elements on page to complex feature-rich applications. What makes it unique is transparent internal design: this means, that you always know, what you are doing, and what happens inside the framework.\n\nFeatures include:\n\n\nfast and powerful class system\npowerful data-bound templates with inheritance support\nframework is designed for customization: all widgets and even core can be customized with minimum effort\nbest practices: no dependency injection, no internal or private code - this makes it very simple and easy to learn\nmodular, decoupled and nonconflicting: parts of the framework can be used by themselves\n\n\nLava framework provides you with tools for solving your real-world tasks.","logo":"http://www.lava-framework.com/www/export/logo90x90.png","name":"LiquidLava","links":{"site":"http://www.lava-framework.com/","github":"https://github.com/kogarashisan/LiquidLava"},"tags":["inheritance"]}},{"title":"Concur","url":"/library/concur","id":"concur","library":{"id":"concur","description":"Sugar for infectious JavaScript inheritance, plus simple metaprogramming & mixins","logo":"/images/repo.png","name":"Concur","links":{"github":"https://github.com/insin/concur"},"tags":["inheritance","meta","mixins","sugar"]}},{"title":"clutility","url":"/library/clutility","id":"clutility","library":{"id":"clutility","description":"Minimalistic class and inheritance utility for javascript. \n\nSmall (1KB). Supports inheritance from any constructor. Doesn't alter prototypes. Makes calling super methods trivial.","logo":"https://raw.githubusercontent.com/mweststrate/clutility/master/logo/logo.png","name":"clutility","links":{"site":"https://github.com/mweststrate/clutility","github":"https://github.com/mweststrate/clutility"},"tags":["Class","declare","inheritance"]}}]